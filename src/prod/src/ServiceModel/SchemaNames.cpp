// ------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All rights reserved.
// Licensed under the MIT License (MIT). See License.txt in the repo root for license information.
// ------------------------------------------------------------

#include "stdafx.h"

using namespace std;
using namespace ServiceModel;

Common::GlobalWString const SchemaNames::Namespace = Common::make_global<wstring>(L"http://schemas.microsoft.com/2011/01/fabric");
    
Common::GlobalWString const SchemaNames::Element_ClusterManifest = Common::make_global<wstring>(L"ClusterManifest");
Common::GlobalWString const SchemaNames::Element_ApplicationManifest = Common::make_global<wstring>(L"ApplicationManifest");
Common::GlobalWString const SchemaNames::Element_ServicePackage = Common::make_global<wstring>(L"ServicePackage");
Common::GlobalWString const SchemaNames::Element_ServiceManifestImport = Common::make_global<wstring>(L"ServiceManifestImport");
Common::GlobalWString const SchemaNames::Element_ServiceManifestRef = Common::make_global<wstring>(L"ServiceManifestRef");
Common::GlobalWString const SchemaNames::Element_ConfigOverridesRef = Common::make_global<wstring>(L"ConfigOverridesRef");
Common::GlobalWString const SchemaNames::Element_ResourceOverrides = Common::make_global<wstring>(L"ResourceOverrides");
Common::GlobalWString const SchemaNames::Element_ServiceManifest = Common::make_global<wstring>(L"ServiceManifest");
Common::GlobalWString const SchemaNames::Element_Description = Common::make_global<wstring>(L"Description");
Common::GlobalWString const SchemaNames::Element_ServiceTypes = Common::make_global<wstring>(L"ServiceTypes");
Common::GlobalWString const SchemaNames::Element_ServiceGroupTypes = Common::make_global<wstring>(L"ServiceGroupTypes");
Common::GlobalWString const SchemaNames::Element_DigestedServiceTypes = Common::make_global<wstring>(L"DigestedServiceTypes");
Common::GlobalWString const SchemaNames::Element_StatefulServiceType = Common::make_global<wstring>(L"StatefulServiceType");
Common::GlobalWString const SchemaNames::Element_StatelessServiceType = Common::make_global<wstring>(L"StatelessServiceType");
Common::GlobalWString const SchemaNames::Element_StatefulServiceGroupType = Common::make_global<wstring>(L"StatefulServiceGroupType");
Common::GlobalWString const SchemaNames::Element_StatelessServiceGroupType = Common::make_global<wstring>(L"StatelessServiceGroupType");
Common::GlobalWString const SchemaNames::Element_ServiceGroupMembers = Common::make_global<wstring>(L"ServiceGroupMembers");
Common::GlobalWString const SchemaNames::Element_ServiceGroupTypeMember = Common::make_global<wstring>(L"ServiceGroupTypeMember");
Common::GlobalWString const SchemaNames::Element_LoadMetrics = Common::make_global<wstring>(L"LoadMetrics");
Common::GlobalWString const SchemaNames::Element_LoadMetric = Common::make_global<wstring>(L"LoadMetric");
Common::GlobalWString const SchemaNames::Element_PlacementConstraints = Common::make_global<wstring>(L"PlacementConstraints");
Common::GlobalWString const SchemaNames::Element_CodePackage = Common::make_global<wstring>(L"CodePackage");
Common::GlobalWString const SchemaNames::Element_DigestedCodePackage = Common::make_global<wstring>(L"DigestedCodePackage");
Common::GlobalWString const SchemaNames::Element_EntryPoint = Common::make_global<wstring>(L"EntryPoint");
Common::GlobalWString const SchemaNames::Element_ExeHost = Common::make_global<wstring>(L"ExeHost");
Common::GlobalWString const SchemaNames::Element_Program = Common::make_global<wstring>(L"Program");
Common::GlobalWString const SchemaNames::Element_Arguments = Common::make_global<wstring>(L"Arguments");
Common::GlobalWString const SchemaNames::Element_WorkingFolder = Common::make_global<wstring>(L"WorkingFolder");
Common::GlobalWString const SchemaNames::Element_ConsoleRedirection = Common::make_global<wstring>(L"ConsoleRedirection");
Common::GlobalWString const SchemaNames::Element_SetupEntryPoint = Common::make_global<wstring>(L"SetupEntryPoint");
Common::GlobalWString const SchemaNames::Element_ContainerHost = Common::make_global<wstring>(L"ContainerHost");
Common::GlobalWString const SchemaNames::Element_ContainerImageName = Common::make_global<wstring>(L"ImageName");
Common::GlobalWString const SchemaNames::Element_ContainerHostPolicies = Common::make_global<wstring>(L"ContainerHostPolicies");
Common::GlobalWString const SchemaNames::Element_ServicePackageContainerPolicy = Common::make_global<wstring>(L"ServicePackageContainerPolicy");
Common::GlobalWString const SchemaNames::Element_RepositoryCredentials = Common::make_global<wstring>(L"RepositoryCredentials");
Common::GlobalWString const SchemaNames::Element_HealthConfig = Common::make_global<wstring>(L"HealthConfig");
Common::GlobalWString const SchemaNames::Element_PortBinding = Common::make_global<wstring>(L"PortBinding");
Common::GlobalWString const SchemaNames::Element_LogConfig = Common::make_global<wstring>(L"LogConfig");
Common::GlobalWString const SchemaNames::Element_Volume = Common::make_global<wstring>(L"Volume");
Common::GlobalWString const SchemaNames::Element_Label = Common::make_global<wstring>(L"Label");
Common::GlobalWString const SchemaNames::Element_CertificateRef = Common::make_global<wstring>(L"CertificateRef");
Common::GlobalWString const SchemaNames::Element_Commands = Common::make_global<wstring>(L"Commands");
Common::GlobalWString const SchemaNames::Element_FromSource = Common::make_global<wstring>(L"FromSource");
Common::GlobalWString const SchemaNames::Element_DllHost = Common::make_global<wstring>(L"DllHost");
Common::GlobalWString const SchemaNames::Element_ManagedAssembly = Common::make_global<wstring>(L"ManagedAssembly");
Common::GlobalWString const SchemaNames::Element_UnmanagedDll = Common::make_global<wstring>(L"UnmanagedDll");
Common::GlobalWString const SchemaNames::Element_RunFrequency = Common::make_global<wstring>(L"RunFrequency");        
Common::GlobalWString const SchemaNames::Element_ConfigPackage = Common::make_global<wstring>(L"ConfigPackage");
Common::GlobalWString const SchemaNames::Element_DigestedConfigPackage = Common::make_global<wstring>(L"DigestedConfigPackage");
Common::GlobalWString const SchemaNames::Element_DataPackage = Common::make_global<wstring>(L"DataPackage");
Common::GlobalWString const SchemaNames::Element_DigestedDataPackage = Common::make_global<wstring>(L"DigestedDataPackage");
Common::GlobalWString const SchemaNames::Element_ConfigParameter = Common::make_global<wstring>(L"Parameter");
Common::GlobalWString const SchemaNames::Element_ConfigSection = Common::make_global<wstring>(L"Section");
Common::GlobalWString const SchemaNames::Element_ConfigSettings = Common::make_global<wstring>(L"Settings");
Common::GlobalWString const SchemaNames::Element_ServicePackageConfigOverrides = Common::make_global<wstring>(L"ServicePackageConfigOverrides");
Common::GlobalWString const SchemaNames::Element_ConfigOverride = Common::make_global<wstring>(L"ConfigOverride");
Common::GlobalWString const SchemaNames::Element_ConfigOverrides = Common::make_global<wstring>(L"ConfigOverrides");
Common::GlobalWString const SchemaNames::Element_Resources = Common::make_global<wstring>(L"Resources");
Common::GlobalWString const SchemaNames::Element_DigestedResources = Common::make_global<wstring>(L"DigestedResources");
Common::GlobalWString const SchemaNames::Element_Certificates = Common::make_global<wstring>(L"Certificates");
Common::GlobalWString const SchemaNames::Element_DigestedCertificates = Common::make_global<wstring>(L"DigestedCertificates");
Common::GlobalWString const SchemaNames::Element_Endpoints = Common::make_global<wstring>(L"Endpoints");
Common::GlobalWString const SchemaNames::Element_DigestedEndpoints = Common::make_global<wstring>(L"DigestedEndpoints");
Common::GlobalWString const SchemaNames::Element_Endpoint = Common::make_global<wstring>(L"Endpoint");
Common::GlobalWString const SchemaNames::Element_DigestedEndpoint = Common::make_global<wstring>(L"DigestedEndpoint");
Common::GlobalWString const SchemaNames::Element_LogCollectionPolicies = Common::make_global<wstring>(L"LogCollectionPolicies");
Common::GlobalWString const SchemaNames::Element_LogCollectionPolicy = Common::make_global<wstring>(L"LogCollectionPolicy");
Common::GlobalWString const SchemaNames::Element_RunAsPolicy = Common::make_global<wstring>(L"RunAsPolicy");
Common::GlobalWString const SchemaNames::Element_DebugParameters = Common::make_global<wstring>(L"DebugParameters");
Common::GlobalWString const SchemaNames::Element_DefaultRunAsPolicy = Common::make_global<wstring>(L"DefaultRunAsPolicy");
Common::GlobalWString const SchemaNames::Element_SetupRunAsPolicy = Common::make_global<wstring>(L"SetupRunAsPolicy");
Common::GlobalWString const SchemaNames::Element_SecurityAccessPolicy = Common::make_global<wstring>(L"SecurityAccessPolicy");
Common::GlobalWString const SchemaNames::Element_EndpointBindingPolicy = Common::make_global<wstring>(L"EndpointBindingPolicy");
Common::GlobalWString const SchemaNames::Element_PackageSharingPolicy = Common::make_global<wstring>(L"PackageSharingPolicy");
Common::GlobalWString const SchemaNames::Element_SecurityAccessPolicies = Common::make_global<wstring>(L"SecurityAccessPolicies");
Common::GlobalWString const SchemaNames::Element_Policies = Common::make_global<wstring>(L"Policies");
Common::GlobalWString const SchemaNames::Element_ApplicationPackage = Common::make_global<wstring>(L"ApplicationPackage");
Common::GlobalWString const SchemaNames::Element_ApplicationInstance = Common::make_global<wstring>(L"ApplicationInstance");
Common::GlobalWString const SchemaNames::Element_Parameters = Common::make_global<wstring>(L"Parameters");
Common::GlobalWString const SchemaNames::Element_ApplicationPackageRef = Common::make_global<wstring>(L"ApplicationPackageRef");
Common::GlobalWString const SchemaNames::Element_ServicePackageRef = Common::make_global<wstring>(L"ServicePackageRef");
Common::GlobalWString const SchemaNames::Element_ServiceTemplates = Common::make_global<wstring>(L"ServiceTemplates");
Common::GlobalWString const SchemaNames::Element_DigestedServiceTemplates = Common::make_global<wstring>(L"DigestedServiceTemplates");
Common::GlobalWString const SchemaNames::Element_DefaultServices = Common::make_global<wstring>(L"DefaultServices");
Common::GlobalWString const SchemaNames::Element_DigestedDefaultServices = Common::make_global<wstring>(L"DigestedDefaultServices");
Common::GlobalWString const SchemaNames::Element_Environment = Common::make_global<wstring>(L"Environment");
Common::GlobalWString const SchemaNames::Element_DigestedEnvironment = Common::make_global<wstring>(L"DigestedEnvironment");
Common::GlobalWString const SchemaNames::Element_Service = Common::make_global<wstring>(L"Service");
Common::GlobalWString const SchemaNames::Element_ServiceGroup = Common::make_global<wstring>(L"ServiceGroup");
Common::GlobalWString const SchemaNames::Element_NamedPartition = Common::make_global<wstring>(L"NamedPartition");
Common::GlobalWString const SchemaNames::Element_Partition = Common::make_global<wstring>(L"Partition");
Common::GlobalWString const SchemaNames::Element_SingletonPartition = Common::make_global<wstring>(L"SingletonPartition");
Common::GlobalWString const SchemaNames::Element_UniformInt64Partition = Common::make_global<wstring>(L"UniformInt64Partition");
Common::GlobalWString const SchemaNames::Element_StatefulService = Common::make_global<wstring>(L"StatefulService");
Common::GlobalWString const SchemaNames::Element_StatelessService = Common::make_global<wstring>(L"StatelessService");
Common::GlobalWString const SchemaNames::Element_StatefulServiceGroup = Common::make_global<wstring>(L"StatefulServiceGroup");
Common::GlobalWString const SchemaNames::Element_StatelessServiceGroup = Common::make_global<wstring>(L"StatelessServiceGroup");
Common::GlobalWString const SchemaNames::Element_ServiceCorrelations = Common::make_global<wstring>(L"ServiceCorrelations");
Common::GlobalWString const SchemaNames::Element_ServiceCorrelation = Common::make_global<wstring>(L"ServiceCorrelation");
Common::GlobalWString const SchemaNames::Element_ServiceScalingPolicies = Common::make_global<wstring>(L"ServiceScalingPolicies");
Common::GlobalWString const SchemaNames::Element_ScalingPolicy = Common::make_global<wstring>(L"ScalingPolicy");
Common::GlobalWString const SchemaNames::Element_ScalingMechanismPartitionInstanceCount = Common::make_global<wstring>(L"InstanceCountScalingMechanism");
Common::GlobalWString const SchemaNames::Element_ScalingMechanismAddRemoveIncrementalNamedPartition = Common::make_global<wstring>(L"AddRemoveIncrementalNamedPartitionScalingMechanism");
Common::GlobalWString const SchemaNames::Element_ScalingTriggerAveragePartitionLoad = Common::make_global<wstring>(L"AveragePartitionLoadScalingTrigger");
Common::GlobalWString const SchemaNames::Element_ScalingTriggerAverageServiceLoad = Common::make_global<wstring>(L"AverageServiceLoadScalingTrigger");
Common::GlobalWString const SchemaNames::Element_ServicePlacementPolicies = Common::make_global<wstring>(L"ServicePlacementPolicies");
Common::GlobalWString const SchemaNames::Element_ServicePlacementPolicy = Common::make_global<wstring>(L"ServicePlacementPolicy");
Common::GlobalWString const SchemaNames::Element_SecretsCertificate = Common::make_global<wstring>(L"SecretsCertificate");
Common::GlobalWString const SchemaNames::Element_EndpointCertificate = Common::make_global<wstring>(L"EndpointCertificate");
Common::GlobalWString const SchemaNames::Element_Members = Common::make_global<wstring>(L"Members");
Common::GlobalWString const SchemaNames::Element_Member = Common::make_global<wstring>(L"Member");
Common::GlobalWString const SchemaNames::Element_Principals = Common::make_global<wstring>(L"Principals");
Common::GlobalWString const SchemaNames::Element_Groups = Common::make_global<wstring>(L"Groups");
Common::GlobalWString const SchemaNames::Element_Group = Common::make_global<wstring>(L"Group");
Common::GlobalWString const SchemaNames::Element_Membership = Common::make_global<wstring>(L"Membership");
Common::GlobalWString const SchemaNames::Element_Users = Common::make_global<wstring>(L"Users");
Common::GlobalWString const SchemaNames::Element_User = Common::make_global<wstring>(L"User");
Common::GlobalWString const SchemaNames::Element_MemberOf = Common::make_global<wstring>(L"MemberOf");
Common::GlobalWString const SchemaNames::Element_DomainGroup = Common::make_global<wstring>(L"DomainGroup");
Common::GlobalWString const SchemaNames::Element_SystemGroup = Common::make_global<wstring>(L"SystemGroup");
Common::GlobalWString const SchemaNames::Element_DomainUser = Common::make_global<wstring>(L"DomainUser");
Common::GlobalWString const SchemaNames::Element_Extensions = Common::make_global<wstring>(L"Extensions");
Common::GlobalWString const SchemaNames::Element_Extension = Common::make_global<wstring>(L"Extension");
Common::GlobalWString const SchemaNames::Element_Diagnostics = Common::make_global<wstring>(L"Diagnostics");
Common::GlobalWString const SchemaNames::Element_CrashDumpSource = Common::make_global<wstring>(L"CrashDumpSource");
Common::GlobalWString const SchemaNames::Element_ETWSource = Common::make_global<wstring>(L"ETWSource");
Common::GlobalWString const SchemaNames::Element_FolderSource = Common::make_global<wstring>(L"FolderSource");
Common::GlobalWString const SchemaNames::Element_Destinations = Common::make_global<wstring>(L"Destinations");
Common::GlobalWString const SchemaNames::Element_LocalStore = Common::make_global<wstring>(L"LocalStore");
Common::GlobalWString const SchemaNames::Element_FileStore = Common::make_global<wstring>(L"FileStore");
Common::GlobalWString const SchemaNames::Element_AzureBlob = Common::make_global<wstring>(L"AzureBlob");
Common::GlobalWString const SchemaNames::Element_Parameter = Common::make_global<wstring>(L"Parameter");
Common::GlobalWString const SchemaNames::Element_AccountName = Common::make_global<wstring>(L"AccountName");
Common::GlobalWString const SchemaNames::Element_AccountPassword = Common::make_global<wstring>(L"AccountPassword");
Common::GlobalWString const SchemaNames::Element_AccountPasswordIsEncrypted = Common::make_global<wstring>(L"AccountPasswordIsEncrypted");
Common::GlobalWString const SchemaNames::Element_ETW = Common::make_global<wstring>(L"ETW");
Common::GlobalWString const SchemaNames::Element_ProviderGuids = Common::make_global<wstring>(L"ProviderGuids");
Common::GlobalWString const SchemaNames::Element_ProviderGuid = Common::make_global<wstring>(L"ProviderGuid");
Common::GlobalWString const SchemaNames::Element_ManifestDataPackages = Common::make_global<wstring>(L"ManifestDataPackages");
Common::GlobalWString const SchemaNames::Element_ManifestDataPackage = Common::make_global<wstring>(L"ManifestDataPackage");
Common::GlobalWString const SchemaNames::Element_Node = Common::make_global<wstring>(L"Node");
Common::GlobalWString const SchemaNames::Element_NodeList = Common::make_global<wstring>(L"NodeList");
Common::GlobalWString const SchemaNames::Element_InfrastructureInformation = Common::make_global<wstring>(L"InfrastructureInformation");
Common::GlobalWString const SchemaNames::Element_TargetInformation = Common::make_global<wstring>(L"TargetInformation");
Common::GlobalWString const SchemaNames::Element_HealthPolicy = Common::make_global<wstring>(L"HealthPolicy");
Common::GlobalWString const SchemaNames::Element_DefaultServiceTypeHealthPolicy = Common::make_global<wstring>(L"DefaultServiceTypeHealthPolicy");
Common::GlobalWString const SchemaNames::Element_ServiceTypeHealthPolicy = Common::make_global<wstring>(L"ServiceTypeHealthPolicy");
Common::GlobalWString const SchemaNames::Element_NTLMAuthenticationPolicy = Common::make_global<wstring>(L"NTLMAuthenticationPolicy");
Common::GlobalWString const SchemaNames::Element_CurrentInstallation = Common::make_global<wstring>(L"CurrentInstallation");
Common::GlobalWString const SchemaNames::Element_TargetInstallation = Common::make_global<wstring>(L"TargetInstallation");
Common::GlobalWString const SchemaNames::Element_EnvironmentVariable = Common::make_global<wstring>(L"EnvironmentVariable");
Common::GlobalWString const SchemaNames::Element_EnvironmentVariables = Common::make_global<wstring>(L"EnvironmentVariables");
Common::GlobalWString const SchemaNames::Element_EnvironmentOverrides = Common::make_global<wstring>(L"EnvironmentOverrides");
Common::GlobalWString const SchemaNames::Element_ResourceGovernancePolicy = Common::make_global<wstring>(L"ResourceGovernancePolicy");
Common::GlobalWString const SchemaNames::Element_ServicePackageResourceGovernancePolicy = Common::make_global<wstring>(L"ServicePackageResourceGovernancePolicy");
Common::GlobalWString const SchemaNames::Element_ServiceFabricRuntimeAccessPolicy = Common::make_global<wstring>(L"ServiceFabricRuntimeAccessPolicy");
Common::GlobalWString const SchemaNames::Element_NetworkPolicies = Common::make_global<wstring>(L"NetworkPolicies");
Common::GlobalWString const SchemaNames::Element_ContainerNetworkPolicies = Common::make_global<wstring>(L"ContainerNetworkPolicies");
Common::GlobalWString const SchemaNames::Element_ContainerNetworkPolicy = Common::make_global<wstring>(L"ContainerNetworkPolicy");
Common::GlobalWString const SchemaNames::Element_EndpointBinding = Common::make_global<wstring>(L"EndpointBinding");
Common::GlobalWString const SchemaNames::Element_DriverOption = Common::make_global<wstring>(L"DriverOption");
Common::GlobalWString const SchemaNames::Element_NetworkConfig = Common::make_global<wstring>(L"NetworkConfig");
Common::GlobalWString const SchemaNames::Element_SecurityOption = Common::make_global<wstring>(L"SecurityOption");
Common::GlobalWString const SchemaNames::Element_ContainerEntryPoint = Common::make_global<wstring>(L"ContainerEntryPoint");
Common::GlobalWString const SchemaNames::Element_ContainerMountedVolume = Common::make_global<wstring>(L"ContainerMountedVolume");
Common::GlobalWString const SchemaNames::Element_ContainerEnvironmentBlock = Common::make_global<wstring>(L"ContainerEnvironmentBlock");
Common::GlobalWString const SchemaNames::Element_ContainerLabel = Common::make_global<wstring>(L"ContainerLabel");
Common::GlobalWString const SchemaNames::Element_ImageOverrides = Common::make_global<wstring>(L"ImageOverrides");
Common::GlobalWString const SchemaNames::Element_Image = Common::make_global<wstring>(L"Image");
Common::GlobalWString const SchemaNames::Element_ConfigPackagePolicies = Common::make_global<wstring>(L"ConfigPackagePolicies");

Common::GlobalWString const SchemaNames::Attribute_ApplicationId = Common::make_global<wstring>(L"ApplicationId");
Common::GlobalWString const SchemaNames::Attribute_ApplicationTypeName = Common::make_global<wstring>(L"ApplicationTypeName");
Common::GlobalWString const SchemaNames::Attribute_ApplicationTypeVersion = Common::make_global<wstring>(L"ApplicationTypeVersion");
Common::GlobalWString const SchemaNames::Attribute_Name = Common::make_global<wstring>(L"Name");
Common::GlobalWString const SchemaNames::Attribute_ServiceDnsName = Common::make_global<wstring>(L"ServiceDnsName");
Common::GlobalWString const SchemaNames::Attribute_ServicePackageActivationMode = Common::make_global<wstring>(L"ServicePackageActivationMode");
Common::GlobalWString const SchemaNames::Attribute_DefaultValue = Common::make_global<wstring>(L"DefaultValue");
Common::GlobalWString const SchemaNames::Attribute_Version = Common::make_global<wstring>(L"Version");
Common::GlobalWString const SchemaNames::Attribute_ManifestId = Common::make_global<wstring>(L"ManifestId");
Common::GlobalWString const SchemaNames::Attribute_ManifestVersion = Common::make_global<wstring>(L"ManifestVersion");
Common::GlobalWString const SchemaNames::Attribute_RolloutVersion = Common::make_global<wstring>(L"RolloutVersion");
Common::GlobalWString const SchemaNames::Attribute_ManifestChecksum = Common::make_global<wstring>(L"ManifestChecksum");
Common::GlobalWString const SchemaNames::Attribute_ContentChecksum = Common::make_global<wstring>(L"ContentChecksum");        
Common::GlobalWString const SchemaNames::Attribute_ServiceManifestName = Common::make_global<wstring>(L"ServiceManifestName");
Common::GlobalWString const SchemaNames::Attribute_ServiceManifestVersion = Common::make_global<wstring>(L"ServiceManifestVersion");
Common::GlobalWString const SchemaNames::Attribute_ServicePackageName = Common::make_global<wstring>(L"ServicePackageName");
Common::GlobalWString const SchemaNames::Attribute_ServiceTypeName = Common::make_global<wstring>(L"ServiceTypeName");
Common::GlobalWString const SchemaNames::Attribute_ServiceGroupTypeName = Common::make_global<wstring>(L"ServiceGroupTypeName");
Common::GlobalWString const SchemaNames::Attribute_HasPersistedState = Common::make_global<wstring>(L"HasPersistedState");
Common::GlobalWString const SchemaNames::Attribute_ReplicaRestartWaitDurationSeconds = Common::make_global<wstring>(L"ReplicaRestartWaitDurationSeconds");
Common::GlobalWString const SchemaNames::Attribute_QuorumLossWaitDurationSeconds = Common::make_global<wstring>(L"QuorumLossWaitDurationSeconds");
Common::GlobalWString const SchemaNames::Attribute_StandByReplicaKeepDurationSeconds = Common::make_global<wstring>(L"StandByReplicaKeepDurationSeconds");
Common::GlobalWString const SchemaNames::Attribute_Weight = Common::make_global<wstring>(L"Weight");
Common::GlobalWString const SchemaNames::Attribute_IsExternalExecutable = Common::make_global<wstring>(L"IsExternalExecutable");
Common::GlobalWString const SchemaNames::Attribute_IsShared = Common::make_global<wstring>(L"IsShared");
Common::GlobalWString const SchemaNames::Attribute_IsActivator = Common::make_global<wstring>(L"IsActivator");
Common::GlobalWString const SchemaNames::Attribute_Type = Common::make_global<wstring>(L"Type");
Common::GlobalWString const SchemaNames::Attribute_IntervalInSeconds = Common::make_global<wstring>(L"IntervalInSeconds");
Common::GlobalWString const SchemaNames::Attribute_Value = Common::make_global<wstring>(L"Value");
Common::GlobalWString const SchemaNames::Attribute_MustOverride = Common::make_global<wstring>(L"MustOverride");
Common::GlobalWString const SchemaNames::Attribute_DefaultLoad = Common::make_global<wstring>(L"DefaultLoad");
Common::GlobalWString const SchemaNames::Attribute_PrimaryDefaultLoad = Common::make_global<wstring>(L"PrimaryDefaultLoad");
Common::GlobalWString const SchemaNames::Attribute_SecondaryDefaultLoad = Common::make_global<wstring>(L"SecondaryDefaultLoad");
Common::GlobalWString const SchemaNames::Attribute_DefaultMoveCost = Common::make_global<wstring>(L"DefaultMoveCost");
Common::GlobalWString const SchemaNames::Attribute_Protocol = Common::make_global<wstring>(L"Protocol");
Common::GlobalWString const SchemaNames::Attribute_CertificateRef = Common::make_global<wstring>(L"CertificateRef");
Common::GlobalWString const SchemaNames::Attribute_Port = Common::make_global<wstring>(L"Port");
Common::GlobalWString const SchemaNames::Attribute_NameRef = Common::make_global<wstring>(L"NameRef");
Common::GlobalWString const SchemaNames::Attribute_CodePackageRef = Common::make_global<wstring>(L"CodePackageRef");
Common::GlobalWString const SchemaNames::Attribute_UseDefaultRepositoryCredentials = Common::make_global<wstring>(L"UseDefaultRepositoryCredentials");
Common::GlobalWString const SchemaNames::Attribute_UseTokenAuthenticationCredentials = Common::make_global<wstring>(L"UseTokenAuthenticationCredentials");
Common::GlobalWString const SchemaNames::Attribute_DataPackageRef = Common::make_global<wstring>(L"DataPackageRef");
Common::GlobalWString const SchemaNames::Attribute_DataPackageVersion = Common::make_global<wstring>(L"DataPackageVersion");
Common::GlobalWString const SchemaNames::Attribute_PackageRef = Common::make_global<wstring>(L"PackageRef");
Common::GlobalWString const SchemaNames::Attribute_UserRef = Common::make_global<wstring>(L"UserRef");
Common::GlobalWString const SchemaNames::Attribute_EntryPointType = Common::make_global<wstring>(L"EntryPointType");
Common::GlobalWString const SchemaNames::Attribute_ResourceRef = Common::make_global<wstring>(L"ResourceRef");
Common::GlobalWString const SchemaNames::Attribute_EndpointRef = Common::make_global<wstring>(L"EndpointRef");
Common::GlobalWString const SchemaNames::Attribute_PrincipalRef = Common::make_global<wstring>(L"PrincipalRef");
Common::GlobalWString const SchemaNames::Attribute_ProgramExePath = Common::make_global<wstring>(L"ProgramExePath");
Common::GlobalWString const SchemaNames::Attribute_DebuggerArguments = Common::make_global<wstring>(L"Arguments");
Common::GlobalWString const SchemaNames::Attribute_EnvironmentBlock = Common::make_global<wstring>(L"EnvironmentBlock");
Common::GlobalWString const SchemaNames::Attribute_Path = Common::make_global<wstring>(L"Path");
Common::GlobalWString const SchemaNames::Attribute_GrantRights = Common::make_global<wstring>(L"GrantRights");
Common::GlobalWString const SchemaNames::Attribute_IsolationPolicy = Common::make_global<wstring>(L"IsolationPolicy");
Common::GlobalWString const SchemaNames::Attribute_PartitionCount = Common::make_global<wstring>(L"PartitionCount");
Common::GlobalWString const SchemaNames::Attribute_LowKey = Common::make_global<wstring>(L"LowKey");
Common::GlobalWString const SchemaNames::Attribute_HighKey = Common::make_global<wstring>(L"HighKey");
Common::GlobalWString const SchemaNames::Attribute_TargetReplicaSetSize = Common::make_global<wstring>(L"TargetReplicaSetSize");
Common::GlobalWString const SchemaNames::Attribute_MinReplicaSetSize = Common::make_global<wstring>(L"MinReplicaSetSize");
Common::GlobalWString const SchemaNames::Attribute_InstanceCount = Common::make_global<wstring>(L"InstanceCount");
Common::GlobalWString const SchemaNames::Attribute_UseImplicitFactory = Common::make_global<wstring>(L"UseImplicitFactory");
Common::GlobalWString const SchemaNames::Attribute_Scheme = Common::make_global<wstring>(L"Scheme");
Common::GlobalWString const SchemaNames::Attribute_ServiceName = Common::make_global<wstring>(L"ServiceName");
Common::GlobalWString const SchemaNames::Attribute_DomainName = Common::make_global<wstring>(L"DomainName");
Common::GlobalWString const SchemaNames::Attribute_X509StoreLocation = Common::make_global<wstring>(L"X509StoreLocation");
Common::GlobalWString const SchemaNames::Attribute_X509StoreName = Common::make_global<wstring>(L"X509StoreName");
Common::GlobalWString const SchemaNames::Attribute_X509FindType = Common::make_global<wstring>(L"X509FindType");
Common::GlobalWString const SchemaNames::Attribute_X509FindValue = Common::make_global<wstring>(L"X509FindValue");
Common::GlobalWString const SchemaNames::Attribute_X509FindValueSecondary = Common::make_global<wstring>(L"X509FindValueSecondary");
Common::GlobalWString const SchemaNames::Attribute_X509Thumbprint = Common::make_global<wstring>(L"X509Thumbprint");
Common::GlobalWString const SchemaNames::Attribute_UseImplicitHost = Common::make_global<wstring>(L"UseImplicitHost");
Common::GlobalWString const SchemaNames::Attribute_UseServiceFabricReplicatedStore = Common::make_global<wstring>(L"UseServiceFabricReplicatedStore");
Common::GlobalWString const SchemaNames::Attribute_FileRetentionCount = Common::make_global<wstring>(L"FileRetentionCount");
Common::GlobalWString const SchemaNames::Attribute_FileMaxSizeInKb = Common::make_global<wstring>(L"FileMaxSizeInKb");
Common::GlobalWString const SchemaNames::Attribute_NameUri = Common::make_global<wstring>(L"NameUri");
Common::GlobalWString const SchemaNames::Attribute_IsEncrypted = Common::make_global<wstring>(L"IsEncrypted");
Common::GlobalWString const SchemaNames::Attribute_IsPasswordEncrypted = Common::make_global<wstring>(L"IsPasswordEncrypted");
Common::GlobalWString const SchemaNames::Attribute_NodeName = Common::make_global<wstring>(L"NodeName");
Common::GlobalWString const SchemaNames::Attribute_IPAddressOrFQDN = Common::make_global<wstring>(L"IPAddressOrFQDN");
Common::GlobalWString const SchemaNames::Attribute_RoleOrTierName = Common::make_global<wstring>(L"RoleOrTierName");
Common::GlobalWString const SchemaNames::Attribute_NodeTypeRef = Common::make_global<wstring>(L"NodeTypeRef");
Common::GlobalWString const SchemaNames::Attribute_IsSeedNode = Common::make_global<wstring>(L"IsSeedNode");
Common::GlobalWString const SchemaNames::Attribute_FaultDomain = Common::make_global<wstring>(L"FaultDomain");
Common::GlobalWString const SchemaNames::Attribute_UpgradeDomain = Common::make_global<wstring>(L"UpgradeDomain");
Common::GlobalWString const SchemaNames::Attribute_AccountType = Common::make_global<wstring>(L"AccountType");
Common::GlobalWString const SchemaNames::Attribute_Password = Common::make_global<wstring>(L"Password");
Common::GlobalWString const SchemaNames::Attribute_AccountName = Common::make_global<wstring>(L"AccountName");
Common::GlobalWString const SchemaNames::Attribute_PasswordEncrypted = Common::make_global<wstring>(L"PasswordEncrypted");
Common::GlobalWString const SchemaNames::Attribute_PerformInteractiveLogon = Common::make_global<wstring>(L"PerformInteractiveLogon");
Common::GlobalWString const SchemaNames::Attribute_LoadUserProfile = Common::make_global<wstring>(L"LoadUserProfile");
Common::GlobalWString const SchemaNames::Attribute_ConsiderWarningAsError = Common::make_global<wstring>(L"ConsiderWarningAsError");
Common::GlobalWString const SchemaNames::Attribute_MaxPercentUnhealthyDeployedApplications = Common::make_global<wstring>(L"MaxPercentUnhealthyDeployedApplications");
Common::GlobalWString const SchemaNames::Attribute_MaxPercentUnhealthyServices = Common::make_global<wstring>(L"MaxPercentUnhealthyServices");
Common::GlobalWString const SchemaNames::Attribute_MaxPercentUnhealthyPartitionsPerService = Common::make_global<wstring>(L"MaxPercentUnhealthyPartitionsPerService");
Common::GlobalWString const SchemaNames::Attribute_MaxPercentUnhealthyReplicasPerPartition = Common::make_global<wstring>(L"MaxPercentUnhealthyReplicasPerPartition");
Common::GlobalWString const SchemaNames::Attribute_IsEnabled = Common::make_global<wstring>(L"IsEnabled");
Common::GlobalWString const SchemaNames::Attribute_RelativeFolderPath = Common::make_global<wstring>(L"RelativeFolderPath");
Common::GlobalWString const SchemaNames::Attribute_RelativePath = Common::make_global<wstring>(L"RelativePath");
Common::GlobalWString const SchemaNames::Attribute_UploadIntervalInMinutes = Common::make_global<wstring>(L"UploadIntervalInMinutes");
Common::GlobalWString const SchemaNames::Attribute_DataDeletionAgeInDays = Common::make_global<wstring>(L"DataDeletionAgeInDays");
Common::GlobalWString const SchemaNames::Attribute_LevelFilter = Common::make_global<wstring>(L"LevelFilter");
Common::GlobalWString const SchemaNames::Attribute_ConnectionString = Common::make_global<wstring>(L"ConnectionString");
Common::GlobalWString const SchemaNames::Attribute_ConnectionStringIsEncrypted = Common::make_global<wstring>(L"ConnectionStringIsEncrypted");
Common::GlobalWString const SchemaNames::Attribute_ContainerName = Common::make_global<wstring>(L"ContainerName");
Common::GlobalWString const SchemaNames::Attribute_Scope = Common::make_global<wstring>(L"Scope");
Common::GlobalWString const SchemaNames::Attribute_PasswordSecret = Common::make_global<wstring>(L"PasswordSecret");
Common::GlobalWString const SchemaNames::Attribute_PasswordSecretEncrypted = Common::make_global<wstring>(L"PasswordSecretEncrypted");
Common::GlobalWString const SchemaNames::Attribute_InstanceId = Common::make_global<wstring>(L"InstanceId");
Common::GlobalWString const SchemaNames::Attribute_MSILocation = Common::make_global<wstring>(L"MSILocation");
Common::GlobalWString const SchemaNames::Attribute_RemoveNodeState = Common::make_global<wstring>(L"RemoveNodeState");
Common::GlobalWString const SchemaNames::Attribute_TargetVersion = Common::make_global<wstring>(L"TargetVersion");
Common::GlobalWString const SchemaNames::Attribute_ClusterManifestLocation = Common::make_global<wstring>(L"ClusterManifestLocation");
Common::GlobalWString const SchemaNames::Attribute_InfrastructureManifestLocation = Common::make_global<wstring>(L"InfrastructureManifestLocation");
Common::GlobalWString const SchemaNames::Attribute_UpgradeEntryPointExe = Common::make_global<wstring>(L"UpgradeEntryPointExe");
Common::GlobalWString const SchemaNames::Attribute_UpgradeEntryPointExeParameters = Common::make_global<wstring>(L"UpgradeEntryPointExeParameters");
Common::GlobalWString const SchemaNames::Attribute_UndoUpgradeEntryPointExe = Common::make_global<wstring>(L"UndoUpgradeEntryPointExe");
Common::GlobalWString const SchemaNames::Attribute_UndoUpgradeEntryPointExeParameters = Common::make_global<wstring>(L"UndoUpgradeEntryPointExeParameters");
Common::GlobalWString const SchemaNames::Attribute_ResourceType = Common::make_global<wstring>(L"ResourceType");
Common::GlobalWString const SchemaNames::Attribute_Email = Common::make_global<wstring>(L"Email");
Common::GlobalWString const SchemaNames::Attribute_UriScheme = Common::make_global<wstring>(L"UriScheme");
Common::GlobalWString const SchemaNames::Attribute_PathSuffix = Common::make_global<wstring>(L"PathSuffix");
Common::GlobalWString const SchemaNames::Attribute_CodePackageLinkFolder = Common::make_global<wstring>(L"CodePackageLinkFolder");
Common::GlobalWString const SchemaNames::Attribute_ConfigPackageLinkFolder = Common::make_global<wstring>(L"ConfigPackageLinkFolder");
Common::GlobalWString const SchemaNames::Attribute_DataPackageLinkFolder = Common::make_global<wstring>(L"DataPackageLinkFolder");
Common::GlobalWString const SchemaNames::Attribute_LockFile = Common::make_global<wstring>(L"LockFile");
Common::GlobalWString const SchemaNames::Attribute_WorkingFolder = Common::make_global<wstring>(L"WorkingFolder");
Common::GlobalWString const SchemaNames::Attribute_DebugParametersFile = Common::make_global<wstring>(L"DebugParametersFile");
Common::GlobalWString const SchemaNames::Attribute_DisableReliableCollectionReplicationMode = Common::make_global<wstring>(L"DisableReliableCollectionReplicationMode");
Common::GlobalWString const SchemaNames::Attribute_ContainerPort = Common::make_global<wstring>(L"ContainerPort");
Common::GlobalWString const SchemaNames::Attribute_MemoryInMB = Common::make_global<wstring>(L"MemoryInMB");
Common::GlobalWString const SchemaNames::Attribute_MemorySwapInMB = Common::make_global<wstring>(L"MemorySwapInMB");
Common::GlobalWString const SchemaNames::Attribute_MemoryReservationInMB = Common::make_global<wstring>(L"MemoryReservationInMB");
Common::GlobalWString const SchemaNames::Attribute_CpuShares = Common::make_global<wstring>(L"CpuShares");
Common::GlobalWString const SchemaNames::Attribute_CpuPercent = Common::make_global<wstring>(L"CpuPercent");
Common::GlobalWString const SchemaNames::Attribute_MaximumIOps = Common::make_global<wstring>(L"MaximumIOps");
Common::GlobalWString const SchemaNames::Attribute_MaximumIOBytesps = Common::make_global<wstring>(L"MaximumIOBandwidth");
Common::GlobalWString const SchemaNames::Attribute_DiskQuotaInMB = Common::make_global<wstring>(L"DiskQuotaInMB");
Common::GlobalWString const SchemaNames::Attribute_KernelMemoryInMB = Common::make_global<wstring>(L"KernelMemoryInMB");
Common::GlobalWString const SchemaNames::Attribute_ShmSizeInMB = Common::make_global<wstring>(L"ShmSizeInMB");
Common::GlobalWString const SchemaNames::Attribute_BlockIOWeight = Common::make_global<wstring>(L"BlockIOWeight");
Common::GlobalWString const SchemaNames::Attribute_Driver = Common::make_global<wstring>(L"Driver");
Common::GlobalWString const SchemaNames::Attribute_AdditionalProperties = Common::make_global<wstring>(L"AdditionalProperties");
Common::GlobalWString const SchemaNames::Attribute_Source = Common::make_global<wstring>(L"Source");
Common::GlobalWString const SchemaNames::Attribute_Destination = Common::make_global<wstring>(L"Destination");
Common::GlobalWString const SchemaNames::Attribute_IsReadOnly = Common::make_global<wstring>(L"IsReadOnly");
Common::GlobalWString const SchemaNames::Attribute_IsolationMode = Common::make_global<wstring>(L"Isolation");
Common::GlobalWString const SchemaNames::Attribute_Hostname = Common::make_global<wstring>(L"Hostname");
Common::GlobalWString const SchemaNames::Attribute_CpuCores = Common::make_global<wstring>(L"CpuCores");
Common::GlobalWString const SchemaNames::Attribute_NetworkType = Common::make_global<wstring>(L"NetworkType");
Common::GlobalWString const SchemaNames::Attribute_RemoveServiceFabricRuntimeAccess = Common::make_global<wstring>(L"RemoveServiceFabricRuntimeAccess");
Common::GlobalWString const SchemaNames::Attribute_NetworkRef = Common::make_global<wstring>(L"NetworkRef");
Common::GlobalWString const SchemaNames::Attribute_IncludeDockerHealthStatusInSystemHealthReport = Common::make_global<wstring>(L"IncludeDockerHealthStatusInSystemHealthReport");
Common::GlobalWString const SchemaNames::Attribute_RestartContainerOnUnhealthyDockerHealthStatus = Common::make_global<wstring>(L"RestartContainerOnUnhealthyDockerHealthStatus");
Common::GlobalWString const SchemaNames::Attribute_AutoRemove = Common::make_global<wstring>(L"AutoRemove");
Common::GlobalWString const SchemaNames::Attribute_RunInteractive = Common::make_global<wstring>(L"RunInteractive");
Common::GlobalWString const SchemaNames::Attribute_ContainersRetentionCount = Common::make_global<wstring>(L"ContainersRetentionCount");
Common::GlobalWString const SchemaNames::Attribute_Os = Common::make_global<wstring>(L"Os");
Common::GlobalWString const SchemaNames::Attribute_ScalingPolicyMetricName = Common::make_global<wstring>(L"MetricName");
Common::GlobalWString const SchemaNames::Attribute_ScalingPolicyLowerLoadThreshold = Common::make_global<wstring>(L"LowerLoadThreshold");
Common::GlobalWString const SchemaNames::Attribute_ScalingPolicyUpperLoadThreshold = Common::make_global<wstring>(L"UpperLoadThreshold");
Common::GlobalWString const SchemaNames::Attribute_ScalingPolicyMinInstanceCount = Common::make_global<wstring>(L"MinInstanceCount");
Common::GlobalWString const SchemaNames::Attribute_ScalingPolicyMaxInstanceCount = Common::make_global<wstring>(L"MaxInstanceCount");
Common::GlobalWString const SchemaNames::Attribute_ScalingPolicyMinPartitionCount = Common::make_global<wstring>(L"MinPartitionCount");
Common::GlobalWString const SchemaNames::Attribute_ScalingPolicyMaxPartitionCount = Common::make_global<wstring>(L"MaxPartitionCount");
Common::GlobalWString const SchemaNames::Attribute_ScalingPolicyUseOnlyPrimaryLoad = Common::make_global<wstring>(L"UseOnlyPrimaryLoad");
Common::GlobalWString const SchemaNames::Attribute_ScalingPolicyScaleInterval = Common::make_global<wstring>(L"ScaleIntervalInSeconds");
Common::GlobalWString const SchemaNames::Attribute_ScalingPolicyScaleIncrement = Common::make_global<wstring>(L"ScaleIncrement");
Common::GlobalWString const SchemaNames::Attribute_SectionName = Common::make_global<wstring>(L"SectionName");
Common::GlobalWString const SchemaNames::Attribute_MountPoint = Common::make_global<wstring>(L"MountPoint");
Common::GlobalWString const SchemaNames::Attribute_EnvironmentVariableName = Common::make_global<wstring>(L"EnvironmentVariableName");
