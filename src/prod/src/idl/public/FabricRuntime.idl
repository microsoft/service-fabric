// ------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All rights reserved.
// Licensed under the MIT License (MIT). See License.txt in the repo root for license information.
// ------------------------------------------------------------

cpp_quote("// ------------------------------------------------------------")
cpp_quote("// Copyright (c) Microsoft Corporation. All rights reserved.")
cpp_quote("// Licensed under the MIT License (MIT). See License.txt in the repo root for license information.")
cpp_quote("// ------------------------------------------------------------")
cpp_quote("#if ( _MSC_VER >= 1020 )")
cpp_quote("#pragma once")
cpp_quote("#endif")

import "Unknwn.idl";
import "FabricTypes.idl";
import "FabricCommon.idl";

//
// Forward Declarations
//
interface IFabricRuntime;
interface IFabricProcessExitHandler;

interface IFabricStatelessServiceFactory;
interface IFabricStatelessServiceInstance;
interface IFabricStatelessServicePartition;
interface IFabricStatelessServicePartition1;
interface IFabricStatelessServicePartition2;
interface IFabricStatelessServicePartition3;

interface IFabricStatefulServiceFactory;
interface IFabricStatefulServiceReplica;
interface IFabricStatefulServicePartition;
interface IFabricStatefulServicePartition1;
interface IFabricStatefulServicePartition2;
interface IFabricStatefulServicePartition3;

interface IFabricStateProvider;
interface IFabricStateReplicator;
interface IFabricStateReplicator2;

interface IFabricAtomicGroupStateReplicator;
interface IFabricAtomicGroupStateProvider;

interface IFabricReplicator;
interface IFabricPrimaryReplicator;
interface IFabricReplicatorCatchupSpecificQuorum;

interface IFabricOperation;
interface IFabricOperationData;
interface IFabricOperationStream;
interface IFabricOperationStream2;
interface IFabricOperationDataStream;

interface IFabricServiceGroupFactory;
interface IFabricServiceGroupFactoryBuilder;
interface IFabricServiceGroupPartition;

interface IFabricCodePackageActivationContext;
interface IFabricCodePackageActivationContext2;
interface IFabricCodePackageActivationContext3;
interface IFabricCodePackageActivationContext4;
interface IFabricCodePackageActivationContext5;
interface IFabricCodePackageActivationContext6;
interface IFabricCodePackage;
interface IFabricCodePackage2;
interface IFabricConfigurationPackage;
interface IFabricConfigurationPackage2;
interface IFabricDataPackage;
interface IFabricCodePackageChangeHandler;
interface IFabricConfigurationPackageChangeHandler;
interface IFabricDataPackageChangeHandler;

interface IFabricTransactionBase;
interface IFabricTransaction;
interface IFabricKeyValueStoreReplica;
interface IFabricKeyValueStoreReplica2;
interface IFabricKeyValueStoreReplica3;
interface IFabricKeyValueStoreReplica4;
interface IFabricKeyValueStoreReplica5;
interface IFabricKeyValueStoreReplica6;
interface IFabricKeyValueStoreEnumerator;
interface IFabricKeyValueStoreEnumerator2;
interface IFabricKeyValueStoreItemEnumerator;
interface IFabricKeyValueStoreItemEnumerator2;
interface IFabricKeyValueStoreItemMetadataEnumerator;
interface IFabricKeyValueStoreItemMetadataEnumerator2;
interface IFabricKeyValueStoreItemResult;
interface IFabricKeyValueStoreItemMetadataResult;
interface IFabricKeyValueStoreNotification;
interface IFabricKeyValueStoreNotificationEnumerator;
interface IFabricStoreEventHandler;
interface IFabricStoreEventHandler2;
interface IFabricStorePostBackupHandler;
interface IFabricSecondaryEventHandler;
interface IFabricNodeContextResult;
interface IFabricNodeContextResult2;

interface IFabricReplicatorSettingsResult;
interface IFabricEseLocalStoreSettingsResult;
interface IFabricSecurityCredentialsResult;

interface IFabricCodePackageActivator;
interface IFabricCodePackageEventHandler;


[
    uuid(cc53af9a-74cd-11df-ac3e-0024811e3892),
    helpstring("Microsoft Azure Service Fabric Runtime Type Library"),
    version(1.0),
]
library FabricRuntimeLib
{
#pragma pack (push, 8)

    // ----------------------------------------------------------------------------
    // List of interfaces to include in the type library
    //
    interface IFabricRuntime;
    interface IFabricProcessExitHandler;

    interface IFabricStatelessServiceFactory;
    interface IFabricStatelessServiceInstance;
    interface IFabricStatelessServicePartition;
    interface IFabricStatelessServicePartition1;
    interface IFabricStatelessServicePartition2;
    interface IFabricStatelessServicePartition3;

    interface IFabricStatefulServiceFactory;
    interface IFabricStatefulServiceReplica;
    interface IFabricStatefulServicePartition;
    interface IFabricStatefulServicePartition1;
    interface IFabricStatefulServicePartition2;
    interface IFabricStatefulServicePartition3;
    interface IFabricStateProvider;
    interface IFabricStateReplicator;

    interface IFabricReplicator;
    interface IFabricPrimaryReplicator;
    interface IFabricReplicatorCatchupSpecificQuorum;

    interface IFabricOperation;
    interface IFabricOperationData;
    interface IFabricOperationStream;
    interface IFabricOperationStream2;
    interface IFabricOperationDataStream;

    interface IFabricAtomicGroupStateProvider;
    interface IFabricAtomicGroupStateReplicator;

    interface IFabricServiceGroupFactory;
    interface IFabricServiceGroupFactoryBuilder;
    interface IFabricServiceGroupPartition;

    interface IFabricCodePackageActivationContext;
    interface IFabricCodePackageActivationContext2;
    interface IFabricCodePackageActivationContext3;
    interface IFabricCodePackageActivationContext4;
    interface IFabricCodePackageActivationContext5;
    interface IFabricCodePackageActivationContext6;

    interface IFabricCodePackage;
    interface IFabricCodePackage2;
    interface IFabricConfigurationPackage;
    interface IFabricConfigurationPackage2;
    interface IFabricDataPackage;
    interface IFabricConfigurationPackageChangeHandler;
    interface IFabricDataPackageChangeHandler;

    interface IFabricTransactionBase;
    interface IFabricTransaction;
    interface IFabricKeyValueStoreReplica;
    interface IFabricKeyValueStoreReplica2;
    interface IFabricKeyValueStoreReplica3;
    interface IFabricKeyValueStoreItemEnumerator;
    interface IFabricKeyValueStoreItemMetadataEnumerator;
    interface IFabricKeyValueStoreItemResult;
    interface IFabricKeyValueStoreItemMetadataResult;
    interface IFabricKeyValueStoreNotification;
    interface IFabricKeyValueStoreNotificationEnumerator;
    interface IFabricKeyValueStoreReplicaHandler;
    interface IFabricNodeContextResult;
    interface IFabricNodeContextResult2;

    interface IFabricReplicatorSettingsResult;
    interface IFabricEseLocalStoreSettingsResult;
    interface IFabricSecurityCredentialsResult;

    interface IFabricCodePackageActivator;
    interface IFabricCodePackageEventHandler;
    
    // ----------------------------------------------------------------------------
    // coclass definitions

    [
        uuid(cc53af8c-74cd-11df-ac3e-0024811e3892),
        noncreatable
    ]
    coclass FabricRuntime
    {
        [default] interface IFabricRuntime;
    }

    // ----------------------------------------------------------------------------
    // module definitions
    [
        uuid(cc53af9b-74cd-11df-ac3e-0024811e3892),
        dllname("FabricRuntime.dll")
    ]
    module FabricRuntimeModule{
        [entry("FabricBeginCreateRuntime")] HRESULT FabricBeginCreateRuntime(
            [in] REFIID riid,
            [in] IFabricProcessExitHandler * exitHandler,
            [in] DWORD timeoutMilliseconds,
            [in] IFabricAsyncOperationCallback * callback,
            [out, retval] IFabricAsyncOperationContext ** context);

        [entry("FabricEndCreateRuntime")] HRESULT FabricEndCreateRuntime(
                [in] IFabricAsyncOperationContext * context,
                [out, retval] void ** fabricRuntime);

        [entry("FabricCreateRuntime")] HRESULT FabricCreateRuntime(
            [in] REFIID riid,
            [out, retval] void ** fabricRuntime);

        [entry("FabricBeginGetActivationContext")] HRESULT FabricBeginGetActivationContext(
            [in] REFIID riid,
            [in] DWORD timeoutMilliseconds,
            [in] IFabricAsyncOperationCallback * callback,
            [out, retval] IFabricAsyncOperationContext ** context);

        [entry("FabricEndGetActivationContext")] HRESULT FabricEndGetActivationContext(
                [in] IFabricAsyncOperationContext * context,
                [out, retval] void ** activationContext);

        [entry("FabricGetActivationContext")] HRESULT FabricGetActivationContext(
            [in] REFIID riid,
            [out, retval] void ** activationContext);

        [entry("FabricCreateKeyValueStoreReplica")] HRESULT FabricCreateKeyValueStoreReplica(
            [in] REFIID riid,
            [in] LPCWSTR storeName,
            [in] FABRIC_PARTITION_ID partitionId,
            [in] FABRIC_REPLICA_ID replicaId,
            [in /*optional*/] FABRIC_REPLICATOR_SETTINGS const * replicatorSettings,
            [in] FABRIC_LOCAL_STORE_KIND localStoreKind,
            [in] void * localStoreSettings,
            [in] IFabricStoreEventHandler * storeEventHandler,
            [out, retval] void ** keyValueStore);

        [entry("FabricCreateKeyValueStoreReplica2")] HRESULT FabricCreateKeyValueStoreReplica2(
            [in] REFIID riid,
            [in] LPCWSTR storeName,
            [in] FABRIC_PARTITION_ID partitionId,
            [in] FABRIC_REPLICA_ID replicaId,
            [in /*optional*/] FABRIC_REPLICATOR_SETTINGS const * replicatorSettings,
            [in] FABRIC_LOCAL_STORE_KIND localStoreKind,
            [in] void * localStoreSettings,
            [in] IFabricStoreEventHandler * storeEventHandler,
            [in] IFabricSecondaryEventHandler * secondaryEventHandler,
            [in] FABRIC_KEY_VALUE_STORE_NOTIFICATION_MODE notificationMode,
            [out, retval] void ** keyValueStore);

        [entry("FabricCreateKeyValueStoreReplica3")] HRESULT FabricCreateKeyValueStoreReplica3(
            [in] REFIID riid,
            [in] LPCWSTR storeName,
            [in] FABRIC_PARTITION_ID partitionId,
            [in] FABRIC_REPLICA_ID replicaId,
            [in /*optional*/] FABRIC_REPLICATOR_SETTINGS const * replicatorSettings,
            [in] FABRIC_LOCAL_STORE_KIND localStoreKind,
            [in] void * localStoreSettings,
            [in] IFabricStoreEventHandler * storeEventHandler,
            [in] IFabricSecondaryEventHandler * secondaryEventHandler,
            [in] FABRIC_KEY_VALUE_STORE_NOTIFICATION_MODE notificationMode,
            [out, retval] void ** keyValueStore);

        [entry("FabricCreateKeyValueStoreReplica4")] HRESULT FabricCreateKeyValueStoreReplica4(
            [in] REFIID riid,
            [in] LPCWSTR storeName,
            [in] FABRIC_PARTITION_ID partitionId,
            [in] FABRIC_REPLICA_ID replicaId,
            [in] FABRIC_URI serviceName,
            [in /*optional*/] FABRIC_REPLICATOR_SETTINGS const * replicatorSettings,
            [in] FABRIC_LOCAL_STORE_KIND localStoreKind,
            [in] void * localStoreSettings,
            [in] IFabricStoreEventHandler * storeEventHandler,
            [in] IFabricSecondaryEventHandler * secondaryEventHandler,
            [in] FABRIC_KEY_VALUE_STORE_NOTIFICATION_MODE notificationMode,
            [out, retval] void ** keyValueStore);

        [entry("FabricCreateKeyValueStoreReplica5")] HRESULT FabricCreateKeyValueStoreReplica5(
            [in] REFIID riid,
            [in] LPCWSTR storeName,
            [in] FABRIC_PARTITION_ID partitionId,
            [in] FABRIC_REPLICA_ID replicaId,
            [in] FABRIC_URI serviceName,
            [in /*optional*/] FABRIC_REPLICATOR_SETTINGS const * replicatorSettings,
            [in /*optional*/] FABRIC_KEY_VALUE_STORE_REPLICA_SETTINGS const * kvsSettings,
            [in] FABRIC_LOCAL_STORE_KIND localStoreKind,
            [in] void * localStoreSettings,
            [in] IFabricStoreEventHandler * storeEventHandler,
            [in] IFabricSecondaryEventHandler * secondaryEventHandler,
            [out, retval] void ** keyValueStore);

         [entry("FabricBeginGetNodeContext")] HRESULT FabricBeginGetNodeContext(
            [in] DWORD timeoutMilliseconds,
            [in] IFabricAsyncOperationCallback * callback,
            [out, retval] IFabricAsyncOperationContext ** context);

         [entry("FabricEndGetNodeContext")] HRESULT FabricEndGetNodeContext(
                [in] IFabricAsyncOperationContext * context,
                [out, retval] void ** nodeContext);

         [entry("FabricGetNodeContext")] HRESULT FabricGetNodeContext(
            [out, retval] void ** nodeContext);

         [entry("FabricLoadReplicatorSettings")] HRESULT FabricLoadReplicatorSettings(
            [in] IFabricCodePackageActivationContext const * codePackageActivationContext,
            [in] LPCWSTR configurationPackageName,
            [in] LPCWSTR sectionName,
            [out, retval] IFabricReplicatorSettingsResult ** replicatorSettings);

         [entry("FabricLoadSecurityCredentials")] HRESULT FabricLoadSecurityCredentials(
            [in] IFabricCodePackageActivationContext const * codePackageActivationContext,
            [in] LPCWSTR configurationPackageName,
            [in] LPCWSTR sectionName,
            [out, retval] IFabricSecurityCredentialsResult ** securityCredentials);

         [entry("FabricLoadEseLocalStoreSettings")] HRESULT FabricLoadEseLocalStoreSettings(
            [in] IFabricCodePackageActivationContext const * codePackageActivationContext,
            [in] LPCWSTR configurationPackageName,
            [in] LPCWSTR sectionName,
            [out, retval] IFabricEseLocalStoreSettingsResult ** settings);

         [entry("FabricBeginGetCodePackageActivator")] HRESULT FabricBeginGetCodePackageActivator(
             [in] REFIID riid,
             [in] DWORD timeoutMilliseconds,
             [in] IFabricAsyncOperationCallback * callback,
             [out, retval] IFabricAsyncOperationContext ** context);

         [entry("FabricEndGetCodePackageActivator")] HRESULT FabricEndGetCodePackageActivator(
             [in] IFabricAsyncOperationContext * context,
             [out, retval] void ** activator);

         [entry("FabricGetCodePackageActivator")] HRESULT FabricGetCodePackageActivator(
             [in] REFIID riid,
             [out, retval] void ** activator);
    }

#pragma pack (pop)
}

// ----------------------------------------------------------------------------
// Interfaces

[object, local, uuid(cc53af8e-74cd-11df-ac3e-0024811e3892)]
interface IFabricRuntime : IUnknown
{
    [] HRESULT BeginRegisterStatelessServiceFactory(
        [in] LPCWSTR serviceTypeName,
        [in] IFabricStatelessServiceFactory * factory,
        [in] DWORD timeoutMilliseconds,
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);

    [] HRESULT EndRegisterStatelessServiceFactory(
        [in] IFabricAsyncOperationContext * context);

    [] HRESULT RegisterStatelessServiceFactory(
        [in] LPCWSTR serviceTypeName,
        [in] IFabricStatelessServiceFactory * factory);

    [] HRESULT BeginRegisterStatefulServiceFactory(
        [in] LPCWSTR serviceTypeName,
        [in] IFabricStatefulServiceFactory * factory,
        [in] DWORD timeoutMilliseconds,
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);

    [] HRESULT EndRegisterStatefulServiceFactory(
        [in] IFabricAsyncOperationContext * context);

    [] HRESULT RegisterStatefulServiceFactory(
        [in] LPCWSTR serviceTypeName,
        [in] IFabricStatefulServiceFactory * factory);

    [] HRESULT CreateServiceGroupFactoryBuilder(
        [out, retval] IFabricServiceGroupFactoryBuilder ** builder);

    [] HRESULT BeginRegisterServiceGroupFactory(
        [in] LPCWSTR groupServiceType,
        [in] IFabricServiceGroupFactory * factory,
        [in] DWORD timeoutMilliseconds,
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);

    [] HRESULT EndRegisterServiceGroupFactory(
        [in] IFabricAsyncOperationContext * context);

    [] HRESULT RegisterServiceGroupFactory(
        [in] LPCWSTR groupServiceType,
        [in] IFabricServiceGroupFactory * factory);
}

[object, local, uuid(cc53af8f-74cd-11df-ac3e-0024811e3892)]
interface IFabricStatelessServiceFactory : IUnknown
{
    [] HRESULT CreateInstance(
        [in] LPCWSTR serviceTypeName,
        [in] FABRIC_URI serviceName,
        [in] ULONG initializationDataLength,
        [in, size_is(initializationDataLength)] const byte * initializationData,
        [in] FABRIC_PARTITION_ID partitionId,
        [in] FABRIC_INSTANCE_ID instanceId,
        [out, retval] IFabricStatelessServiceInstance ** serviceInstance);
}

[object, local, uuid(cc53af90-74cd-11df-ac3e-0024811e3892)]
interface IFabricStatelessServiceInstance : IUnknown
{
    [] HRESULT BeginOpen(
        [in] IFabricStatelessServicePartition * partition,
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);

    [] HRESULT EndOpen(
        [in] IFabricAsyncOperationContext * context,
        [out, retval] IFabricStringResult ** serviceAddress);

    [] HRESULT BeginClose(
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);

    [] HRESULT EndClose(
        [in] IFabricAsyncOperationContext * context);

    [] void Abort();
}

[object, local, uuid(cc53af91-74cd-11df-ac3e-0024811e3892)]
interface IFabricStatelessServicePartition : IUnknown
{
    [] HRESULT GetPartitionInfo(
        [out, retval] const FABRIC_SERVICE_PARTITION_INFORMATION ** bufferedValue);

    [] HRESULT ReportLoad(
        [in] ULONG metricCount,
        [in, size_is(metricCount)] const FABRIC_LOAD_METRIC * metrics);

    [] HRESULT ReportFault(
        [in] FABRIC_FAULT_TYPE faultType);
}

[object, local, uuid(bf6bb505-7bd0-4371-b6c0-cba319a5e50b)]
interface IFabricStatelessServicePartition1 : IFabricStatelessServicePartition
{
    [] HRESULT ReportMoveCost(
        [in] FABRIC_MOVE_COST moveCost);
}

[object, local, uuid(9ff35b6c-9d97-4312-93ad-7f34cbdb4ca4)]
interface IFabricStatelessServicePartition2 : IFabricStatelessServicePartition1
{
    [] HRESULT ReportInstanceHealth(
        [in] const FABRIC_HEALTH_INFORMATION * healthInfo);
    [] HRESULT ReportPartitionHealth(
        [in] const FABRIC_HEALTH_INFORMATION * healthInfo);
}

[object, local, uuid(f2fa2000-70a7-4ed5-9d3e-0b7deca2433f)]
interface IFabricStatelessServicePartition3 : IFabricStatelessServicePartition2
{
    [] HRESULT ReportInstanceHealth2(
        [in] const FABRIC_HEALTH_INFORMATION * healthInfo,
        [in] const FABRIC_HEALTH_REPORT_SEND_OPTIONS * sendOptions);
    [] HRESULT ReportPartitionHealth2(
        [in] const FABRIC_HEALTH_INFORMATION * healthInfo,
        [in] const FABRIC_HEALTH_REPORT_SEND_OPTIONS * sendOptions);
}

[object, local, uuid(77ff0c6b-6780-48ec-b4b0-61989327b0f2)]
interface IFabricStatefulServiceFactory : IUnknown
{
    [] HRESULT CreateReplica(
        [in] LPCWSTR serviceTypeName,
        [in] FABRIC_URI serviceName,
        [in] ULONG initializationDataLength,
        [in, size_is(initializationDataLength)] const byte * initializationData,
        [in] FABRIC_PARTITION_ID partitionId,
        [in] FABRIC_REPLICA_ID replicaId,
        [out, retval] IFabricStatefulServiceReplica ** serviceReplica);
}

[object, local, uuid(8ae3be0e-505d-4dc1-ad8f-0cb0f9576b8a)]
interface IFabricStatefulServiceReplica : IUnknown
{
    [] HRESULT BeginOpen(
        [in] FABRIC_REPLICA_OPEN_MODE openMode,
        [in] IFabricStatefulServicePartition * partition,
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);
    [] HRESULT EndOpen(
        [in] IFabricAsyncOperationContext * context,
        [out, retval] IFabricReplicator ** replicator);

    [] HRESULT BeginChangeRole(
        [in] FABRIC_REPLICA_ROLE newRole,
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);
    [] HRESULT EndChangeRole(
        [in] IFabricAsyncOperationContext * context,
        [out, retval] IFabricStringResult ** serviceAddress);

    [] HRESULT BeginClose(
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);
    [] HRESULT EndClose(
        [in] IFabricAsyncOperationContext * context);

    [] void Abort();
}

[object, local, uuid(5beccc37-8655-4f20-bd43-f50691d7cd16)]
interface IFabricStatefulServicePartition : IUnknown
{
    [] HRESULT GetPartitionInfo(
        [out, retval] const FABRIC_SERVICE_PARTITION_INFORMATION ** bufferedValue);

    [] HRESULT GetReadStatus(
        [out, retval] FABRIC_SERVICE_PARTITION_ACCESS_STATUS * readStatus);

    [] HRESULT GetWriteStatus(
        [out, retval] FABRIC_SERVICE_PARTITION_ACCESS_STATUS * writeStatus);

    [] HRESULT CreateReplicator(
        [in] IFabricStateProvider * stateProvider,
        [in /*optional*/] FABRIC_REPLICATOR_SETTINGS const * replicatorSettings,
        [out] IFabricReplicator ** replicator,
        [out, retval] IFabricStateReplicator ** stateReplicator);

    [] HRESULT ReportLoad(
        [in] ULONG metricCount,
        [in, size_is(metricCount)] const FABRIC_LOAD_METRIC * metrics);

    [] HRESULT ReportFault(
        [in] FABRIC_FAULT_TYPE faultType);
}

[object, local, uuid(c9c66f2f-9dff-4c87-bbe4-a08b4c4074cf)]
interface IFabricStatefulServicePartition1 : IFabricStatefulServicePartition
{
    [] HRESULT ReportMoveCost(
        [in] FABRIC_MOVE_COST moveCost);
}

[object, local, uuid(df27b476-fa25-459f-a7d3-87d3eec9c73c)]
interface IFabricStatefulServicePartition2 : IFabricStatefulServicePartition1
{
    [] HRESULT ReportReplicaHealth(
        [in] const FABRIC_HEALTH_INFORMATION * healthInfo);
    [] HRESULT ReportPartitionHealth(
        [in] const FABRIC_HEALTH_INFORMATION * healthInfo);
}

[object, local, uuid(51f1269d-b061-4c1c-96cf-6508cece813b)]
interface IFabricStatefulServicePartition3 : IFabricStatefulServicePartition2
{
    [] HRESULT ReportReplicaHealth2(
        [in] const FABRIC_HEALTH_INFORMATION * healthInfo,
        [in] const FABRIC_HEALTH_REPORT_SEND_OPTIONS * sendOptions);
    [] HRESULT ReportPartitionHealth2(
        [in] const FABRIC_HEALTH_INFORMATION * healthInfo,
        [in] const FABRIC_HEALTH_REPORT_SEND_OPTIONS * sendOptions);
}

[object, local, uuid(89e9a978-c771-44f2-92e8-3bf271cabe9c)]
interface IFabricStateReplicator : IUnknown
{
    [] HRESULT BeginReplicate(
        [in] IFabricOperationData * operationData,
        [in] IFabricAsyncOperationCallback * callback,
        [out] FABRIC_SEQUENCE_NUMBER * sequenceNumber,
        [out, retval] IFabricAsyncOperationContext ** context);
    [] HRESULT EndReplicate(
        [in] IFabricAsyncOperationContext * context,
        [out, retval] FABRIC_SEQUENCE_NUMBER * sequenceNumber);

    [] HRESULT GetReplicationStream(
        [out, retval] IFabricOperationStream **stream);

    [] HRESULT GetCopyStream(
        [out, retval] IFabricOperationStream **stream);

    [] HRESULT UpdateReplicatorSettings(
        [in] FABRIC_REPLICATOR_SETTINGS const * replicatorSettings);
}

[object, local, uuid(4A28D542-658F-46F9-9BF4-79B7CAE25C5D)]
interface IFabricStateReplicator2 : IFabricStateReplicator
{
    [] HRESULT GetReplicatorSettings(
        [out, retval] IFabricReplicatorSettingsResult ** replicatorSettings);
}

[object, local, uuid(3ebfec79-bd27-43f3-8be8-da38ee723951)]
interface IFabricStateProvider : IUnknown
{
    [] HRESULT BeginUpdateEpoch(
        [in] FABRIC_EPOCH const * epoch,
        [in] FABRIC_SEQUENCE_NUMBER previousEpochLastSequenceNumber,
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);
    [] HRESULT EndUpdateEpoch(
        [in] IFabricAsyncOperationContext * context);

    [] HRESULT GetLastCommittedSequenceNumber(
        [out, retval] FABRIC_SEQUENCE_NUMBER * sequenceNumber);

    [] HRESULT BeginOnDataLoss(
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);
    [] HRESULT EndOnDataLoss(
        [in] IFabricAsyncOperationContext * context,
        [out, retval] BOOLEAN * isStateChanged);

    [] HRESULT GetCopyContext(
        [out, retval] IFabricOperationDataStream ** copyContextStream);

    [] HRESULT GetCopyState(
        [in] FABRIC_SEQUENCE_NUMBER uptoSequenceNumber,
        [in] IFabricOperationDataStream * copyContextStream,
        [out, retval] IFabricOperationDataStream ** copyStateStream);
}

[object, local, uuid(f4ad6bfa-e23c-4a48-9617-c099cd59a23a)]
interface IFabricOperation : IUnknown
{
    [] const FABRIC_OPERATION_METADATA * get_Metadata();

    [] HRESULT GetData(
        [out] ULONG * count,
        [out, retval] const FABRIC_OPERATION_DATA_BUFFER ** buffers);

    [] HRESULT Acknowledge();
}

[object, local, uuid(bab8ad87-37b7-482a-985d-baf38a785dcd)]
interface IFabricOperationData : IUnknown
{
    [] HRESULT GetData(
        [out] ULONG * count,
        [out, retval] const FABRIC_OPERATION_DATA_BUFFER ** buffers);
}

[object, local, uuid(A98FB97A-D6B0-408A-A878-A9EDB09C2587)]
interface IFabricOperationStream : IUnknown
{
    [] HRESULT BeginGetOperation(
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);

    [] HRESULT EndGetOperation(
        [in] IFabricAsyncOperationContext * context,
        [out, retval] IFabricOperation ** operation);
}

[object, local, uuid(0930199B-590A-4065-BEC9-5F93B6AAE086)]
interface IFabricOperationStream2 : IFabricOperationStream
{
    [] HRESULT ReportFault(
        [in] FABRIC_FAULT_TYPE faultType);
}

[object, local, uuid(c4e9084c-be92-49c9-8c18-d44d088c2e32)]
interface IFabricOperationDataStream : IUnknown
{
    [] HRESULT BeginGetNext(
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);

    [] HRESULT EndGetNext(
        [in] IFabricAsyncOperationContext * context,
        [out, retval] IFabricOperationData ** operationData);
}

[object, local, uuid(067f144a-e5be-4f5e-a181-8b5593e20242)]
interface IFabricReplicator : IUnknown
{
    [] HRESULT BeginOpen(
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);
    [] HRESULT EndOpen(
        [in] IFabricAsyncOperationContext * context,
        [out, retval] IFabricStringResult ** replicationAddress);

    [] HRESULT BeginChangeRole(
        [in] FABRIC_EPOCH const * epoch,
        [in] FABRIC_REPLICA_ROLE role,
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);
    [] HRESULT EndChangeRole(
        [in] IFabricAsyncOperationContext * context);

    [] HRESULT BeginUpdateEpoch(
        [in] FABRIC_EPOCH const * epoch,
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);
    [] HRESULT EndUpdateEpoch(
        [in] IFabricAsyncOperationContext * context);

    [] HRESULT BeginClose(
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);
    [] HRESULT EndClose(
        [in] IFabricAsyncOperationContext * context);

    [] void Abort();

    [] HRESULT GetCurrentProgress(
        [out] FABRIC_SEQUENCE_NUMBER * lastSequenceNumber);

    [] HRESULT GetCatchUpCapability(
        [out] FABRIC_SEQUENCE_NUMBER * fromSequenceNumber);
}

[object, local, uuid(564e50dd-c3a4-4600-a60e-6658874307ae)]
interface IFabricPrimaryReplicator : IFabricReplicator
{
    [] HRESULT BeginOnDataLoss(
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);
    [] HRESULT EndOnDataLoss(
        [in] IFabricAsyncOperationContext * context,
        [out, retval] BOOLEAN * isStateChanged);

    [] HRESULT UpdateCatchUpReplicaSetConfiguration(
        [in] const FABRIC_REPLICA_SET_CONFIGURATION * currentConfiguration,
        [in] const FABRIC_REPLICA_SET_CONFIGURATION * previousConfiguration);

    [] HRESULT BeginWaitForCatchUpQuorum(
        [in] FABRIC_REPLICA_SET_QUORUM_MODE catchUpMode,
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);
    [] HRESULT EndWaitForCatchUpQuorum(
        [in] IFabricAsyncOperationContext * context);

    [] HRESULT UpdateCurrentReplicaSetConfiguration(
        [in] const FABRIC_REPLICA_SET_CONFIGURATION * currentConfiguration);

    [] HRESULT BeginBuildReplica(
        [in] const FABRIC_REPLICA_INFORMATION * replica,
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);
    [] HRESULT EndBuildReplica(
        [in] IFabricAsyncOperationContext * context);

    [] HRESULT RemoveReplica([in] FABRIC_REPLICA_ID replicaId);
}

[object, local, uuid(aa3116fe-277d-482d-bd16-5366fa405757)]
interface IFabricReplicatorCatchupSpecificQuorum : IUnknown
{
}

[object, local, uuid(80d2155c-4fc2-4fde-9696-c2f39b471c3d)]
interface IFabricAtomicGroupStateReplicator : IUnknown
{
    [] HRESULT CreateAtomicGroup([out, retval] FABRIC_ATOMIC_GROUP_ID* AtomicGroupId);

    [] HRESULT BeginReplicateAtomicGroupOperation(
        [in] FABRIC_ATOMIC_GROUP_ID atomicGroupId,
        [in] IFabricOperationData * operationData,
        [in] IFabricAsyncOperationCallback * callback,
        [out] FABRIC_SEQUENCE_NUMBER * operationSequenceNumber,
        [out, retval] IFabricAsyncOperationContext ** context);
    [] HRESULT EndReplicateAtomicGroupOperation(
        [in] IFabricAsyncOperationContext * context,
        [out, retval] FABRIC_SEQUENCE_NUMBER * operationSequenceNumber);

    [] HRESULT BeginReplicateAtomicGroupCommit(
        [in] FABRIC_ATOMIC_GROUP_ID atomicGroupId,
        [in] IFabricAsyncOperationCallback * callback,
        [out] FABRIC_SEQUENCE_NUMBER * commitSequenceNumber,
        [out, retval] IFabricAsyncOperationContext ** context);
    [] HRESULT EndReplicateAtomicGroupCommit(
        [in] IFabricAsyncOperationContext * context,
        [out, retval] FABRIC_SEQUENCE_NUMBER * commitSequenceNumber);

    [] HRESULT BeginReplicateAtomicGroupRollback(
        [in] FABRIC_ATOMIC_GROUP_ID atomicGroupId,
        [in] IFabricAsyncOperationCallback * callback,
        [out] FABRIC_SEQUENCE_NUMBER * rollbackSequenceNumber,
        [out, retval] IFabricAsyncOperationContext ** context);
    [] HRESULT EndReplicateAtomicGroupRollback(
        [in] IFabricAsyncOperationContext * context,
        [out, retval] FABRIC_SEQUENCE_NUMBER * rollbackSequenceNumber);
}

[object, local, uuid(2b670953-6148-4f7d-a920-b390de43d913)]
interface IFabricAtomicGroupStateProvider : IUnknown
{
    [] HRESULT BeginAtomicGroupCommit(
        [in] FABRIC_ATOMIC_GROUP_ID atomicGroupId,
        [in] FABRIC_SEQUENCE_NUMBER commitSequenceNumber,
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);
    [] HRESULT EndAtomicGroupCommit([in] IFabricAsyncOperationContext * context);

    [] HRESULT BeginAtomicGroupRollback(
        [in] FABRIC_ATOMIC_GROUP_ID atomicGroupId,
        [in] FABRIC_SEQUENCE_NUMBER rollbackequenceNumber,
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);
    [] HRESULT EndAtomicGroupRollback([in] IFabricAsyncOperationContext * context);

    [] HRESULT BeginUndoProgress(
        [in] FABRIC_SEQUENCE_NUMBER fromCommitSequenceNumber,
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);
    [] HRESULT EndUndoProgress([in] IFabricAsyncOperationContext * context);
}

[object, local, uuid(3860d61d-1e51-4a65-b109-d93c11311657)]
interface IFabricServiceGroupFactory : IUnknown
{
}

[object, local, uuid(a9fe8b06-19b1-49e6-8911-41d9d9219e1c)]
interface IFabricServiceGroupFactoryBuilder : IUnknown
{
    [] HRESULT AddStatelessServiceFactory(
        [in] LPCWSTR memberServiceType,
        [in] IFabricStatelessServiceFactory * factory);

    [] HRESULT AddStatefulServiceFactory(
        [in] LPCWSTR memberServiceType,
        [in] IFabricStatefulServiceFactory * factory);

    [] HRESULT RemoveServiceFactory(
        [in] LPCWSTR memberServiceType);

    [] HRESULT ToServiceGroupFactory(
        [out, retval] IFabricServiceGroupFactory ** factory);
}

[object, local, uuid(2b24299a-7489-467f-8e7f-4507bff73b86)]
interface IFabricServiceGroupPartition : IUnknown
{
    [] HRESULT ResolveMember(
        [in] FABRIC_URI name,
        [in] REFIID riid,
        [out, retval] void ** member);
}

[object, local, uuid(68a971e2-f15f-4d95-a79c-8a257909659e)]
interface IFabricCodePackageActivationContext : IUnknown
{
    [] LPCWSTR get_ContextId();

    [] LPCWSTR get_CodePackageName();

    [] LPCWSTR get_CodePackageVersion();

    [] LPCWSTR get_WorkDirectory();

    [] LPCWSTR get_LogDirectory();

    [] LPCWSTR get_TempDirectory();

    [] const FABRIC_SERVICE_TYPE_DESCRIPTION_LIST * get_ServiceTypes();

    [] const FABRIC_SERVICE_GROUP_TYPE_DESCRIPTION_LIST * get_ServiceGroupTypes();

    [] const FABRIC_APPLICATION_PRINCIPALS_DESCRIPTION * get_ApplicationPrincipals();

    [] const FABRIC_ENDPOINT_RESOURCE_DESCRIPTION_LIST * get_ServiceEndpointResources();

    [] HRESULT GetServiceEndpointResource(
        [in] LPCWSTR serviceEndpointResourceName,
        [out, retval] const FABRIC_ENDPOINT_RESOURCE_DESCRIPTION ** bufferedValue);

    [] HRESULT GetCodePackageNames(
        [out, retval] IFabricStringListResult ** names);

    [] HRESULT GetConfigurationPackageNames(
        [out, retval] IFabricStringListResult ** names);

    [] HRESULT GetDataPackageNames(
        [out, retval] IFabricStringListResult ** names);

    [] HRESULT GetCodePackage(
        [in] LPCWSTR codePackageName,
        [out, retval] IFabricCodePackage ** codePackage);

    [] HRESULT GetConfigurationPackage(
        [in] LPCWSTR configPackageName,
        [out, retval] IFabricConfigurationPackage ** configPackage);

    [] HRESULT GetDataPackage(
        [in] LPCWSTR dataPackageName,
        [out, retval] IFabricDataPackage ** dataPackage);

    [] HRESULT RegisterCodePackageChangeHandler(
        [in] IFabricCodePackageChangeHandler * callback,
        [out, retval] LONGLONG * callbackHandle);

    [] HRESULT UnregisterCodePackageChangeHandler(
        [in] LONGLONG callbackHandle);

    [] HRESULT RegisterConfigurationPackageChangeHandler(
        [in] IFabricConfigurationPackageChangeHandler * callback,
        [out, retval] LONGLONG * callbackHandle);

    [] HRESULT UnregisterConfigurationPackageChangeHandler(
        [in] LONGLONG callbackHandle);

    [] HRESULT RegisterDataPackageChangeHandler(
        [in] IFabricDataPackageChangeHandler * callback,
        [out, retval] LONGLONG * callbackHandle);

    [] HRESULT UnregisterDataPackageChangeHandler(
        [in] LONGLONG callbackHandle);
}

[object, local, uuid(6c83d5c1-1954-4b80-9175-0d0e7c8715c9)]
interface IFabricCodePackageActivationContext2 : IFabricCodePackageActivationContext
{
    [] FABRIC_URI get_ApplicationName();

    [] LPCWSTR get_ApplicationTypeName();

    [] HRESULT GetServiceManifestName(
        [out, retval] IFabricStringResult ** serviceManifestName);

    [] HRESULT GetServiceManifestVersion(
        [out, retval] IFabricStringResult ** serviceManifestVersion);
}

[object, local, uuid(6efee900-f491-4b03-bc5b-3a70de103593)]
interface IFabricCodePackageActivationContext3 : IFabricCodePackageActivationContext2
{
    [] HRESULT ReportApplicationHealth(
        [in] const FABRIC_HEALTH_INFORMATION * healthInfo);
    [] HRESULT ReportDeployedApplicationHealth(
        [in] const FABRIC_HEALTH_INFORMATION * healthInfo);
    [] HRESULT ReportDeployedServicePackageHealth(
        [in] const FABRIC_HEALTH_INFORMATION * healthInfo);
}

[object, local, uuid(99efebb6-a7b4-4d45-b45e-f191a66eef03)]
interface IFabricCodePackageActivationContext4 : IFabricCodePackageActivationContext3
{
    [] HRESULT ReportApplicationHealth2(
        [in] const FABRIC_HEALTH_INFORMATION * healthInfo,
        [in] const FABRIC_HEALTH_REPORT_SEND_OPTIONS * sendOptions);
    [] HRESULT ReportDeployedApplicationHealth2(
        [in] const FABRIC_HEALTH_INFORMATION * healthInfo,
        [in] const FABRIC_HEALTH_REPORT_SEND_OPTIONS * sendOptions);
    [] HRESULT ReportDeployedServicePackageHealth2(
        [in] const FABRIC_HEALTH_INFORMATION * healthInfo,
        [in] const FABRIC_HEALTH_REPORT_SEND_OPTIONS * sendOptions);
}

[object, local, uuid(fe45387e-8711-4949-ac36-31dc95035513)]
interface IFabricCodePackageActivationContext5 : IFabricCodePackageActivationContext4
{
    [] LPCWSTR get_ServiceListenAddress();

    [] LPCWSTR get_ServicePublishAddress();
}

[object, local, uuid(fa5fda9b-472c-45a0-9b60-a374691227a4)]
interface IFabricCodePackageActivationContext6 : IFabricCodePackageActivationContext5
{
    [] HRESULT GetDirectory(
        [in] LPCWSTR logicalDirectoryName,
        [out, retval] IFabricStringResult ** directoryPath);
}

[object, local, uuid(20792b45-4d13-41a4-af13-346e529f00c5)]
interface IFabricCodePackage : IUnknown
{
    [] const FABRIC_CODE_PACKAGE_DESCRIPTION * get_Description();

    [] LPCWSTR get_Path();
}

[object, local, uuid(cdf0a4e6-ad80-4cd6-b67e-e4c002428600)]
interface IFabricCodePackage2 : IFabricCodePackage
{
    [] const FABRIC_RUNAS_POLICY_DESCRIPTION * get_SetupEntryPointRunAsPolicy();

    [] const FABRIC_RUNAS_POLICY_DESCRIPTION * get_EntryPointRunAsPolicy();
}

[object, local, uuid(ac4c3bfa-2563-46b7-a71d-2dca7b0a8f4d)]
interface IFabricConfigurationPackage : IUnknown
{
    [] const FABRIC_CONFIGURATION_PACKAGE_DESCRIPTION * get_Description();

    [] LPCWSTR get_Path();

    [] const FABRIC_CONFIGURATION_SETTINGS * get_Settings();

    [] HRESULT GetSection(
        [in] LPCWSTR sectionName,
        [out, retval] const FABRIC_CONFIGURATION_SECTION ** bufferedValue);

    [] HRESULT GetValue(
        [in] LPCWSTR sectionName,
        [in] LPCWSTR parameterName,
        [out] BOOLEAN * isEncrypted,
        [out, retval] LPCWSTR * bufferedValue);

    [] HRESULT DecryptValue(
        [in] LPCWSTR encryptedValue,
        [out, retval] IFabricStringResult ** decryptedValue);
}

[object, local, uuid(d3161f31-708a-4f83-91ff-f2af15f74a2f)]
interface IFabricConfigurationPackage2 : IFabricConfigurationPackage
{
    [] HRESULT GetValues(
        [in] LPCWSTR sectionName,
        [in] LPCWSTR parameterPrefix,
        [out, retval] FABRIC_CONFIGURATION_PARAMETER_LIST ** bufferedValue);
}

[object, local, uuid(aa67de09-3657-435f-a2f6-b3a17a0a4371)]
interface IFabricDataPackage : IUnknown
{
    [] const FABRIC_DATA_PACKAGE_DESCRIPTION * get_Description();

    [] LPCWSTR get_Path();
}

[object, local, uuid(b90d36cd-acb5-427a-b318-3b045981d0cc)]
interface IFabricCodePackageChangeHandler : IUnknown
{
    [] void OnPackageAdded(
        [in] IFabricCodePackageActivationContext * source,
        [in] IFabricCodePackage * codePackage);

    [] void OnPackageRemoved(
        [in] IFabricCodePackageActivationContext * source,
        [in] IFabricCodePackage * codePackage);

    [] void OnPackageModified(
        [in] IFabricCodePackageActivationContext * source,
        [in] IFabricCodePackage * previousCodePackage,
        [in] IFabricCodePackage * codePackage);
}

[object, local, uuid(c3954d48-b5ee-4ff4-9bc0-c30f6d0d3a85)]
interface IFabricConfigurationPackageChangeHandler : IUnknown
{
    [] void OnPackageAdded(
        [in] IFabricCodePackageActivationContext * source,
        [in] IFabricConfigurationPackage * configPackage);

    [] void OnPackageRemoved(
        [in] IFabricCodePackageActivationContext * source,
        [in] IFabricConfigurationPackage * configPackage);

    [] void OnPackageModified(
        [in] IFabricCodePackageActivationContext * source,
        [in] IFabricConfigurationPackage * previousConfigPackage,
        [in] IFabricConfigurationPackage * configPackage);
}

[object, local, uuid(8d0a726f-bd17-4b32-807b-be2a8024b2e0)]
interface IFabricDataPackageChangeHandler : IUnknown
{
    [] void OnPackageAdded(
        [in] IFabricCodePackageActivationContext * source,
        [in] IFabricDataPackage * dataPackage);

    [] void OnPackageRemoved(
        [in] IFabricCodePackageActivationContext * source,
        [in] IFabricDataPackage * dataPackage);

    [] void OnPackageModified(
        [in] IFabricCodePackageActivationContext * source,
        [in] IFabricDataPackage * previousDataPackage,
        [in] IFabricDataPackage * dataPackage);
}

[object, local, uuid(c58d50a2-01f0-4267-bbe7-223b565c1346)]
interface IFabricProcessExitHandler : IUnknown {
    [] void FabricProcessExited();
}

[object, local, uuid(32d656a1-7ad5-47b8-bd66-a2e302626b7e)]
interface IFabricTransactionBase : IUnknown
{
    [] const FABRIC_TRANSACTION_ID * get_Id();

    [] FABRIC_TRANSACTION_ISOLATION_LEVEL get_IsolationLevel();
}

[object, local, uuid(19ee48b4-6d4d-470b-ac1e-2d3996a173c8)]
interface IFabricTransaction : IFabricTransactionBase
{
    [] HRESULT BeginCommit(
        [in] DWORD timeoutMilliseconds,
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);

    [] HRESULT EndCommit(
        [in] IFabricAsyncOperationContext * context,
        [out, retval] FABRIC_SEQUENCE_NUMBER * commitSequenceNumber);

    [] void Rollback();
}

[object, local, uuid(97da35c4-38ed-4a2a-8f37-fbeb56382235)]
interface IFabricKeyValueStoreReplica : IFabricStatefulServiceReplica
{
    [] HRESULT GetCurrentEpoch([out] FABRIC_EPOCH * currentEpoch);

    [] HRESULT UpdateReplicatorSettings(
        [in] FABRIC_REPLICATOR_SETTINGS const * replicatorSettings);

    [] HRESULT CreateTransaction(
        [out, retval] IFabricTransaction ** transaction);

    [] HRESULT Add(
        [in] IFabricTransactionBase * transaction,
        [in] LPCWSTR key,
        [in] LONG valueSizeInBytes,
        [in, size_is(valueSizeInBytes)] const BYTE * value);

    [] HRESULT Remove(
        [in] IFabricTransactionBase * transaction,
        [in] LPCWSTR key,
        [in] FABRIC_SEQUENCE_NUMBER checkSequenceNumber);

    [] HRESULT Update(
        [in] IFabricTransactionBase * transaction,
        [in] LPCWSTR key,
        [in] LONG valueSizeInBytes,
        [in, size_is(valueSizeInBytes)] const BYTE * value,
        [in] FABRIC_SEQUENCE_NUMBER checkSequenceNumber);

    [] HRESULT Get(
        [in] IFabricTransactionBase * transaction,
        [in] LPCWSTR key,
        [out, retval] IFabricKeyValueStoreItemResult ** result);

    [] HRESULT GetMetadata(
        [in] IFabricTransactionBase * transaction,
        [in] LPCWSTR key,
        [out, retval] IFabricKeyValueStoreItemMetadataResult ** result);

    [] HRESULT Contains(
        [in] IFabricTransactionBase * transaction,
        [in] LPCWSTR key,
        [out, retval] BOOLEAN * result);

    [] HRESULT Enumerate(
        [in] IFabricTransactionBase * transaction,
        [out, retval] IFabricKeyValueStoreItemEnumerator ** result);

    [] HRESULT EnumerateByKey(
        [in] IFabricTransactionBase * transaction,
        [in] LPCWSTR keyPrefix,
        [out, retval] IFabricKeyValueStoreItemEnumerator ** result);

    [] HRESULT EnumerateMetadata(
        [in] IFabricTransactionBase * transaction,
        [out, retval] IFabricKeyValueStoreItemMetadataEnumerator ** result);

    [] HRESULT EnumerateMetadataByKey(
        [in] IFabricTransactionBase * transaction,
        [in] LPCWSTR keyPrefix,
        [out, retval] IFabricKeyValueStoreItemMetadataEnumerator ** result);
}

[object, local, uuid(fef805b2-5aca-4caa-9c51-fb3bd577a792)]
interface IFabricKeyValueStoreReplica2 : IFabricKeyValueStoreReplica
{
    [] HRESULT Backup(
        [in] LPCWSTR backupDirectory);

    [] HRESULT Restore(
        [in] LPCWSTR backupDirectory);

    [] HRESULT CreateTransaction2(
        [in] const FABRIC_KEY_VALUE_STORE_TRANSACTION_SETTINGS * settings,
        [out, retval] IFabricTransaction ** transaction);
}

[object, local, uuid(c1297172-a8aa-4096-bdcc-1ece0c5d8c8f)]
interface IFabricKeyValueStoreReplica3 : IFabricKeyValueStoreReplica2
{
    /// <summary>
    /// Begins a backup of the key-value store.
    /// </summary>
    /// <param name="dir">The directory where the backup is to be stored.</param>
    /// <param name="backupOption">The backup option.</param>
    /// <param name="postBackupHandler">
    /// The handler provided by clients of the key-value store. The key-value store invokes the begin and end
    /// methods of this handler to initiate any post-backup action that the client needs to perform before
    /// completing a single backup cycle.
    /// </param>
    /// <param name="callback">The callback to be invoked when the backup is completed.</param>
    /// <param name="context">The operation context that is passed into the EndBackup method.</param>
    /// <returns>S_OK if backup was initiated successfully. An appropriate error value otherwise.</returns>
    [] HRESULT BeginBackup(
        [in] LPCWSTR backupDirectory,
        [in] FABRIC_STORE_BACKUP_OPTION backupOption,
        [in] IFabricStorePostBackupHandler * postBackupHandler,
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);

    /// <summary>
    /// Completes a single backup cycle.
    /// </summary>
    /// <param name="context">The context that is populated in the out parameter from BeginBackup.</param>
    /// <returns>S_OK if backup was completed successfully. An appropriate error value otherwise.</returns>
    [] HRESULT EndBackup(
        [in] IFabricAsyncOperationContext * context);
}

[object, local, uuid(ff16d2f1-41a9-4c64-804a-a20bf28c04f3)]
interface IFabricKeyValueStoreReplica4 : IFabricKeyValueStoreReplica3
{
    /// <summary>
    /// Begins a restore of the key-value store replica.
    /// </summary>
    /// <param name="dir">The directory where the replica is to be restored from.</param>
    /// <param name="callback">The callback to be invoked when the restore is completed.</param>
    /// <param name="context">The operation context that is passed into the EndRestore method.</param>
    /// <returns>S_OK if restore was initiated successfully. An appropriate error value otherwise.</returns>
    [] HRESULT BeginRestore(
        [in] LPCWSTR backupDirectory,
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);

    /// <summary>
    /// Completes a single restore cycle.
    /// </summary>
    /// <param name="context">The context that is populated in the out parameter from BeginRestore.</param>
    /// <returns>S_OK if restore was completed successfully. An appropriate error value otherwise.</returns>
    [] HRESULT EndRestore(
        [in] IFabricAsyncOperationContext * context);
}

[object, local, uuid(34f2da40-6227-448a-be72-c517b0d69432)]
interface IFabricKeyValueStoreReplica5 : IFabricKeyValueStoreReplica4
{
    [] HRESULT TryAdd(
        [in] IFabricTransactionBase * transaction,
        [in] LPCWSTR key,
        [in] LONG valueSizeInBytes,
        [in, size_is(valueSizeInBytes)] const BYTE * value,
        [out, retval] BOOLEAN * added);

    [] HRESULT TryRemove(
        [in] IFabricTransactionBase * transaction,
        [in] LPCWSTR key,
        [in] FABRIC_SEQUENCE_NUMBER checkSequenceNumber,
        [out, retval] BOOLEAN * exists);

    [] HRESULT TryUpdate(
        [in] IFabricTransactionBase * transaction,
        [in] LPCWSTR key,
        [in] LONG valueSizeInBytes,
        [in, size_is(valueSizeInBytes)] const BYTE * value,
        [in] FABRIC_SEQUENCE_NUMBER checkSequenceNumber,
        [out, retval] BOOLEAN * exists);

    [] HRESULT TryGet(
        [in] IFabricTransactionBase * transaction,
        [in] LPCWSTR key,
        [out, retval] IFabricKeyValueStoreItemResult ** result);

    [] HRESULT TryGetMetadata(
        [in] IFabricTransactionBase * transaction,
        [in] LPCWSTR key,
        [out, retval] IFabricKeyValueStoreItemMetadataResult ** result);

    [] HRESULT EnumerateByKey2(
        [in] IFabricTransactionBase * transaction,
        [in] LPCWSTR keyPrefix,
        [in] BOOLEAN strictPrefix,
        [out, retval] IFabricKeyValueStoreItemEnumerator ** result);

    [] HRESULT EnumerateMetadataByKey2(
        [in] IFabricTransactionBase * transaction,
        [in] LPCWSTR keyPrefix,
        [in] BOOLEAN strictPrefix,
        [out, retval] IFabricKeyValueStoreItemMetadataEnumerator ** result);
}

[object, local, uuid(56e77be1-e81f-4e42-8522-162c2d608184)]
interface IFabricKeyValueStoreReplica6 : IFabricKeyValueStoreReplica5
{
    [] HRESULT BeginRestore2(
        [in] LPCWSTR backupDirectory,
        [in] FABRIC_KEY_VALUE_STORE_RESTORE_SETTINGS * settings,
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);
}

[object, local, uuid(6722b848-15bb-4528-bf54-c7bbe27b6f9a)]
interface IFabricKeyValueStoreEnumerator : IUnknown
{
    [] HRESULT EnumerateByKey(
        [in] LPCWSTR keyPrefix,
        [out, retval] IFabricKeyValueStoreItemEnumerator ** result);

    [] HRESULT EnumerateMetadataByKey(
        [in] LPCWSTR keyPrefix,
        [out, retval] IFabricKeyValueStoreItemMetadataEnumerator ** result);
}

[object, local, uuid(63dfd264-4f2b-4be6-8234-1fa200165fe9)]
interface IFabricKeyValueStoreEnumerator2 : IFabricKeyValueStoreEnumerator
{
    [] HRESULT EnumerateByKey2(
        [in] LPCWSTR keyPrefix,
        [in] BOOLEAN strictPrefix,
        [out, retval] IFabricKeyValueStoreItemEnumerator ** result);

    [] HRESULT EnumerateMetadataByKey2(
        [in] LPCWSTR keyPrefix,
        [in] BOOLEAN strictPrefix,
        [out, retval] IFabricKeyValueStoreItemMetadataEnumerator ** result);
}

[object, local, uuid(c202788f-54d3-44a6-8f3c-b4bbfcdb95d2)]
interface IFabricKeyValueStoreItemEnumerator : IUnknown
{
    [] HRESULT MoveNext();

    [] IFabricKeyValueStoreItemResult * get_Current();
}

[object, local, uuid(0bc06aee-fffa-4450-9099-116a5f0e0b53)]
interface IFabricKeyValueStoreItemMetadataEnumerator : IUnknown
{
    [] HRESULT MoveNext();

    [] IFabricKeyValueStoreItemMetadataResult * get_Current();
}

[object, local, uuid(ef25bc08-be76-43c7-adad-20f01fba3399)]
interface IFabricKeyValueStoreNotificationEnumerator : IUnknown
{
    [] HRESULT MoveNext();

    [] IFabricKeyValueStoreNotification * get_Current();

    [] void Reset();
}

[object, local, uuid(da143bbc-81e1-48cd-afd7-b642bc5b9bfd)]
interface IFabricKeyValueStoreItemEnumerator2 : IFabricKeyValueStoreItemEnumerator
{
    [] HRESULT TryMoveNext([out, retval] BOOLEAN * success);
}

[object, local, uuid(8803d53e-dd73-40fc-a662-1bfe999419ea)]
interface IFabricKeyValueStoreItemMetadataEnumerator2 : IFabricKeyValueStoreItemMetadataEnumerator
{
    [] HRESULT TryMoveNext([out, retval] BOOLEAN * success);
}

[object, local, uuid(55eec7c6-ae81-407a-b84c-22771d314ac7)]
interface IFabricKeyValueStoreNotificationEnumerator2 : IFabricKeyValueStoreNotificationEnumerator
{
    [] HRESULT TryMoveNext([out, retval] BOOLEAN * success);
}

[object, local, uuid(c1f1c89d-b0b8-44dc-bc97-6c074c1a805e)]
interface IFabricKeyValueStoreItemResult : IUnknown
{
    [] const FABRIC_KEY_VALUE_STORE_ITEM * get_Item();
}

[object, local, uuid(17c483a1-69e6-4bdc-a058-54fd4a1839fd)]
interface IFabricKeyValueStoreItemMetadataResult : IUnknown
{
    [] const FABRIC_KEY_VALUE_STORE_ITEM_METADATA * get_Metadata();
}

[object, local, uuid(cb660aa6-c51e-4f05-9526-93982b550e8f)]
interface IFabricKeyValueStoreNotification : IFabricKeyValueStoreItemResult
{
    [] BOOLEAN IsDelete();
}

[object, local, uuid(220e6da4-985b-4dee-8fe9-77521b838795)]
interface IFabricStoreEventHandler : IUnknown
{
    [] void OnDataLoss();
}

[object, local, uuid(CCE4523F-614B-4D6A-98A3-1E197C0213EA)]
interface IFabricStoreEventHandler2 : IFabricStoreEventHandler
{
    [] HRESULT BeginOnDataLoss(
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);
    [] HRESULT EndOnDataLoss(
        [in] IFabricAsyncOperationContext * context,
        [out, retval] BOOLEAN * isStateChanged);
}

[object, local, uuid(2af2e8a6-41df-4e32-9d2a-d73a711e652a)]
interface IFabricStorePostBackupHandler : IUnknown
{
    /// <summary>
    /// Begins a post backup operation that is implemented by clients/users of the key-value store.
    /// This allows clients to take additional actions on the backed up folder contents. 
    /// </summary>
    /// <param name="info">The info about the backup created in the call to Backup or BeginBackup.</param>
    /// <param name="callback">The callback to be invoked when the backup is completed.</param>
    /// <param name="context">The operation context that is passed into the EndPostBackup method.</param>
    /// <returns>S_OK if post backup was initiated successfully. An appropriate error value otherwise.</returns>
    [] HRESULT BeginPostBackup(
        [in] FABRIC_STORE_BACKUP_INFO * info,
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);

    /// <summary>
    /// Ends a post backup operation that began with BeginPostBackup. This is implemented by 
    /// clients/users of the key-value store. This allows clients to take additional actions on the backed 
    /// up folder contents. 
    /// </summary>
    /// <param name="info">The info about the backup created in the call to Backup or BeginBackup.</param>
    /// <param name="context">The operation context that was returned as an out parameter from the BeginPostBackup method.</param>
    /// <param name="status">
    /// The success/failure status provided by the user regarding the post backup operation.
    /// Windows Fabric can use this status to enforce/dis-allow certain backup operations. E.g. if the client
    /// sets the status to FALSE, then Windows Fabric can disallow incremental backups and only allow a full backup
    /// the next time.
    /// </param>
    /// <returns>S_OK if post backup was completed successfully. An appropriate error value otherwise.</returns>
    [] HRESULT EndPostBackup(
        [in] IFabricAsyncOperationContext * context,
        [out, retval] BOOLEAN * status);
}

[object, local, uuid(7d124a7d-258e-49f2-a9b0-e800406103fb)]
interface IFabricSecondaryEventHandler : IUnknown
{
    [] HRESULT OnCopyComplete(
        [in] IFabricKeyValueStoreEnumerator * enumerator);

    [] HRESULT OnReplicationOperation(
        [in] IFabricKeyValueStoreNotificationEnumerator * enumerator);
}

[object, local, uuid(0952f885-6f5a-4ed3-abe4-90c403d1e3ce)]
interface IFabricNodeContextResult : IUnknown
{
    [] const FABRIC_NODE_CONTEXT * get_NodeContext();
}

[object, local, uuid(472bf2e1-d617-4b5c-a91d-fabed9ff3550)]
interface IFabricNodeContextResult2 : IFabricNodeContextResult
{
    [] HRESULT GetDirectory(
        [in] LPCWSTR logicalDirectoryName,
        [out, retval] IFabricStringResult ** directoryPath);
}

[object, local, uuid(718954F3-DC1E-4060-9806-0CBF36F71051)]
interface IFabricReplicatorSettingsResult : IUnknown
{
    [] const FABRIC_REPLICATOR_SETTINGS * get_ReplicatorSettings();
}

[object, local, uuid(AACE77AE-D8E1-4144-B1EE-5AC74FD54F65)]
interface IFabricEseLocalStoreSettingsResult : IUnknown
{
    [] const FABRIC_ESE_LOCAL_STORE_SETTINGS * get_Settings();
}

[object, local, uuid(049A111D-6A30-48E9-8F69-470760D3EFB9)]
interface IFabricSecurityCredentialsResult : IUnknown
{
    [] const FABRIC_SECURITY_CREDENTIALS * get_SecurityCredentials();
}

[object, local, uuid(70BE1B10-B259-46FC-B813-0B75720E7183)]
interface IFabricCodePackageActivator : IUnknown
{
    [] HRESULT BeginActivateCodePackage(
        [in] FABRIC_STRING_LIST * codePackageNames,
        [in] FABRIC_STRING_MAP * environment,
        [in] DWORD timeoutMilliseconds,
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);

    [] HRESULT EndActivateCodePackage(
        [in] IFabricAsyncOperationContext * context);

    [] HRESULT BeginDeactivateCodePackage(
        [in] FABRIC_STRING_LIST * codePackageNames,
        [in] DWORD timeoutMilliseconds,
        [in] IFabricAsyncOperationCallback * callback,
        [out, retval] IFabricAsyncOperationContext ** context);

    [] HRESULT EndDeactivateCodePackage(
        [in] IFabricAsyncOperationContext * context);

    [] HRESULT AbortCodePackage(
        [in] FABRIC_STRING_LIST * codePackageNames);

    [] HRESULT RegisterCodePackageEventHandler(
        [in] IFabricCodePackageEventHandler * eventHandler,
        [out, retval] ULONGLONG * callbackHandle);

    [] HRESULT UnregisterCodePackageEventHandler(
        [in] ULONGLONG callbackHandle);
}

[object, local, uuid(899E0CA8-16DF-458E-8915-D0307B4AB101)]
interface IFabricCodePackageEventHandler : IUnknown
{
    [] void OnCodePackageEvent(
        [in] IFabricCodePackageActivator * source,
        [in] const FABRIC_CODE_PACKAGE_EVENT_DESCRIPTION * eventDesc);
}

//
// Function definition for unmanaged DLL hosting in FWP
cpp_quote("typedef HRESULT (*FnFabricMain)(IFabricRuntime * runtime, IFabricCodePackageActivationContext * activationContext);")