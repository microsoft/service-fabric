
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a dotnet run from src\ResGen folder.
//     To add or remove a member, edit your .resx file then rerun src\ResGen.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Microsoft.ServiceFabric.Data {

using System;
using System.Reflection;

/// <summary>
///   A strongly-typed resource class, for looking up localized strings, etc.
/// </summary>
[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]

internal class SR {

    private static global::System.Resources.ResourceManager resourceMan;

    private static global::System.Globalization.CultureInfo resourceCulture;

    [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
    internal SR() {
    }

    /// <summary>
    ///   Returns the cached ResourceManager instance used by this class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Resources.ResourceManager ResourceManager {
        get {
            if (object.ReferenceEquals(resourceMan, null)) {
                global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.ServiceFabric.Data.SR", typeof(SR).Assembly);
                resourceMan = temp;
            }
            return resourceMan;
        }
    }

    /// <summary>
    ///   Overrides the current threads CurrentUICulture property for all
    ///   resource lookups using this strongly typed resource class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Globalization.CultureInfo Culture {
        get {
            return resourceCulture;
        }
        set {
            resourceCulture = value;
        }
    }
    

    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Argument {0} must not be null.
    ///  
    /// </summary>
    internal static string Error_NullArgument_Formatted {
        get {
            return ResourceManager.GetString("Error_NullArgument_Formatted", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    The operation is invalid.
    ///  
    /// </summary>
    internal static string Error_InvalidOperation {
        get {
            return ResourceManager.GetString("Error_InvalidOperation", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Transaction {0} is committing or rolling back or has already committed or rolled back
    ///  
    /// </summary>
    internal static string Error_ReplicatorTransactionNotActive {
        get {
            return ResourceManager.GetString("Error_ReplicatorTransactionNotActive", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Transaction {0} was internally aborted as the commit could not succeed within an internal timeout duration
    ///  
    /// </summary>
    internal static string Error_ReplicatorTransactionCommitTimeout {
        get {
            return ResourceManager.GetString("Error_ReplicatorTransactionCommitTimeout", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Transaction {0} is currently reading data. Cannot issue another read/write until the read completes
    ///  
    /// </summary>
    internal static string Error_ReplicatorTransactionReadInProgress {
        get {
            return ResourceManager.GetString("Error_ReplicatorTransactionReadInProgress", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Transaction {0} was internally aborted by the replicator as it was active for too long and blocked a checkpoint
    ///  
    /// </summary>
    internal static string Error_ReplicatorTransactionInternallyAborted {
        get {
            return ResourceManager.GetString("Error_ReplicatorTransactionInternallyAborted", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Invalid argument {0} processed at {1}.
    ///  
    /// </summary>
    internal static string Error_ArgumentInvalid_Formatted {
        get {
            return ResourceManager.GetString("Error_ArgumentInvalid_Formatted", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Invalid argument
    ///  
    /// </summary>
    internal static string Error_ArgumentInvalid {
        get {
            return ResourceManager.GetString("Error_ArgumentInvalid", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    The argument {0} is invalid.
    ///  
    /// </summary>
    internal static string Error_ArgumentInvalid_Formatted_arg1 {
        get {
            return ResourceManager.GetString("Error_ArgumentInvalid_Formatted_arg1", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    The argument {0} is not expected.
    ///  
    /// </summary>
    internal static string Error_ArgumentUnexpected_Formatted {
        get {
            return ResourceManager.GetString("Error_ArgumentUnexpected_Formatted", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Argument {0} has invalid value '{1}'.
    ///  
    /// </summary>
    internal static string Error_InvalidArgument_Value {
        get {
            return ResourceManager.GetString("Error_InvalidArgument_Value", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Throttling transaction writes due to slow disk throughput
    ///  
    /// </summary>
    internal static string Warning_V2ReplThrottle {
        get {
            return ResourceManager.GetString("Warning_V2ReplThrottle", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    The value for Transactional Replicator Setting {0} is invalid
    ///  
    /// </summary>
    internal static string Error_InvalidV2ReplSetting_1Arg {
        get {
            return ResourceManager.GetString("Error_InvalidV2ReplSetting_1Arg", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Throttling transaction writes due to slow disk throughput
    ///  
    /// </summary>
    internal static string Error_V2ReplInvalidAPIOnAtomicOperation {
        get {
            return ResourceManager.GetString("Error_V2ReplInvalidAPIOnAtomicOperation", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Not a primary transaction
    ///  
    /// </summary>
    internal static string Error_V2ReplNotPrimartTransaction {
        get {
            return ResourceManager.GetString("Error_V2ReplNotPrimartTransaction", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Replicator Log cannot be restored as it was in the process of removing state on the state providers.
    ///  
    /// </summary>
    internal static string Error_V2ReplIncompleteChangeRoleToNone {
        get {
            return ResourceManager.GetString("Error_V2ReplIncompleteChangeRoleToNone", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Incremental backup ({0}) has accumulated backup logs ({1}) larger than or equal to {2} ({3})
    ///  
    /// </summary>
    internal static string Error_AccumulatedBackupLogTooLarge {
        get {
            return ResourceManager.GetString("Error_AccumulatedBackupLogTooLarge", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Full backup ({0}) has not been taken in this Epoch {1}
    ///  
    /// </summary>
    internal static string Error_FullBackupRequiredInThisEpoch {
        get {
            return ResourceManager.GetString("Error_FullBackupRequiredInThisEpoch", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    BackupOption.FullAndNotReplicate
    ///  
    /// </summary>
    internal static string Error_LocalBackupNotSupported {
        get {
            return ResourceManager.GetString("Error_LocalBackupNotSupported", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Restore in progress
    ///  
    /// </summary>
    internal static string Error_RestoreInProgress {
        get {
            return ResourceManager.GetString("Error_RestoreInProgress", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Backup callback returned false.
    ///  
    /// </summary>
    internal static string Error_BackupCallbackFailed {
        get {
            return ResourceManager.GetString("Error_BackupCallbackFailed", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Backup in progress
    ///  
    /// </summary>
    internal static string Error_BackupInProgress {
        get {
            return ResourceManager.GetString("Error_BackupInProgress", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Full backup missing.
    ///  
    /// </summary>
    internal static string Error_FullBackupRequired {
        get {
            return ResourceManager.GetString("Error_FullBackupRequired", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    lock
    ///  
    /// </summary>
    internal static string Error_Lock {
        get {
            return ResourceManager.GetString("Error_Lock", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Restore can only be called during OnDataLossAsync.
    ///  
    /// </summary>
    internal static string Error_RestoreMustBeCalledDuringDataLoss {
        get {
            return ResourceManager.GetString("Error_RestoreMustBeCalledDuringDataLoss", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    State contained in backupDirectory is older than current state in the replica.
    ///  
    /// </summary>
    internal static string Error_RestoreUnSafe {
        get {
            return ResourceManager.GetString("Error_RestoreUnSafe", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    timeout
    ///  
    /// </summary>
    internal static string Error_Timeout {
        get {
            return ResourceManager.GetString("Error_Timeout", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Backup not completed within timeout
    ///  
    /// </summary>
    internal static string Error_BackupTimeoutExceeded {
        get {
            return ResourceManager.GetString("Error_BackupTimeoutExceeded", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Data corrupted. Padding is expected.
    ///  
    /// </summary>
    internal static string Error_InvalidData_PaddingExpected {
        get {
            return ResourceManager.GetString("Error_InvalidData_PaddingExpected", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Data corrupted. Alignment expected. Position: {0}
    ///  
    /// </summary>
    internal static string Error_InvalidData_AlignmentExpected {
        get {
            return ResourceManager.GetString("Error_InvalidData_AlignmentExpected", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Enumerable has been invalidated. It cannot be used anymore.
    ///  
    /// </summary>
    internal static string Error_TStore_InvalidEnumerable {
        get {
            return ResourceManager.GetString("Error_TStore_InvalidEnumerable", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    RebuildNotificationAsyncCallback is already set
    ///  
    /// </summary>
    internal static string Error_DD_RebuildNotificationCallbackAlreadySet {
        get {
            return ResourceManager.GetString("Error_DD_RebuildNotificationCallbackAlreadySet", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    acquiredLock
    ///  
    /// </summary>
    internal static string Error_AcquiredLock {
        get {
            return ResourceManager.GetString("Error_AcquiredLock", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    addValueFactory
    ///  
    /// </summary>
    internal static string Error_AddValueFactory {
        get {
            return ResourceManager.GetString("Error_AddValueFactory", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    atomicOperation
    ///  
    /// </summary>
    internal static string Error_AtomicOperation {
        get {
            return ResourceManager.GetString("Error_AtomicOperation", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    atomicRedoOperation
    ///  
    /// </summary>
    internal static string Error_AtomicRedoOperation {
        get {
            return ResourceManager.GetString("Error_AtomicRedoOperation", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Backups corrupted. Backup lsn order does not match: {0} > {1}
    ///  
    /// </summary>
    internal static string Error_BackupFolderInfo_BackupLSNMismatch {
        get {
            return ResourceManager.GetString("Error_BackupFolderInfo_BackupLSNMismatch", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Full backup corrupted. Parent id {0} must match backup id {1}.
    ///  
    /// </summary>
    internal static string Error_BackupFolderInfo_FullBackupCorrupted {
        get {
            return ResourceManager.GetString("Error_BackupFolderInfo_FullBackupCorrupted", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Incremental backup chain broken. Parent id {0} must match backup id {1}. {2} {3}
    ///  
    /// </summary>
    internal static string Error_BackupFolderInfo_IncrementalChainBroken {
        get {
            return ResourceManager.GetString("Error_BackupFolderInfo_IncrementalChainBroken", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    One full backup folder must exist
    ///  
    /// </summary>
    internal static string Error_BackupFolderInfo_MissingFullBackup {
        get {
            return ResourceManager.GetString("Error_BackupFolderInfo_MissingFullBackup", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Backup folder does not exist
    ///  
    /// </summary>
    internal static string Error_BackupFolderInfo_NullFolder {
        get {
            return ResourceManager.GetString("Error_BackupFolderInfo_NullFolder", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    BackupLogFile is corrupt ({0})
    ///  
    /// </summary>
    internal static string Error_BackupLogFileAsyncEnumerator_Corrupt {
        get {
            return ResourceManager.GetString("Error_BackupLogFileAsyncEnumerator_Corrupt", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Backup log file cannot be deserialized (unknown version number: {0}, expected version number: {1})
    ///  
    /// </summary>
    internal static string Error_BackupLogFile_Deserialized {
        get {
            return ResourceManager.GetString("Error_BackupLogFile_Deserialized", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Backup metadata file cannot be deserialized (unknown version number: {0}, expected version number: {1})
    ///  
    /// </summary>
    internal static string Error_BackupMetadata_Deserialized {
        get {
            return ResourceManager.GetString("Error_BackupMetadata_Deserialized", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    block extends beyond end of the stream
    ///  
    /// </summary>
    internal static string Error_Block_Beyond_Stream {
        get {
            return ResourceManager.GetString("Error_Block_Beyond_Stream", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    {0} is not a supported built-in type.
    ///  
    /// </summary>
    internal static string Error_BuiltInType_Expected {
        get {
            return ResourceManager.GetString("Error_BuiltInType_Expected", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    bytes
    ///  
    /// </summary>
    internal static string Error_BytesNull {
        get {
            return ResourceManager.GetString("Error_BytesNull", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    checksum mismatch
    ///  
    /// </summary>
    internal static string Error_Checksum_Mismatch {
        get {
            return ResourceManager.GetString("Error_Checksum_Mismatch", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    copy failed: received {0} files but expected to receive {1} files.
    ///  
    /// </summary>
    internal static string Error_CopyManager_CopyFailed {
        get {
            return ResourceManager.GetString("Error_CopyManager_CopyFailed", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Unknown copy protocol version number: {0}
    ///  
    /// </summary>
    internal static string Error_CopyManager_UnknownProtocol {
        get {
            return ResourceManager.GetString("Error_CopyManager_UnknownProtocol", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Either TKey or TValue must be ICloneable and not a ValueType.
    ///  
    /// </summary>
    internal static string Error_DD_ICloneable_Expected {
        get {
            return ResourceManager.GetString("Error_DD_ICloneable_Expected", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    DictionaryInitializationContext cannot be deserialized (unknown version number: {0}, expected version number: {1})
    ///  
    /// </summary>
    internal static string Error_DD_InitializationContext_Deserialized {
        get {
            return ResourceManager.GetString("Error_DD_InitializationContext_Deserialized", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Only LockMode.Default and LockMode.Update is supported.
    ///  
    /// </summary>
    internal static string Error_DD_LockMode_Invalid {
        get {
            return ResourceManager.GetString("Error_DD_LockMode_Invalid", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Distributed Dictionary is not registered
    ///  
    /// </summary>
    internal static string Error_DD_Registration {
        get {
            return ResourceManager.GetString("Error_DD_Registration", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Distributed Queue is not registered
    ///  
    /// </summary>
    internal static string Error_DQ_NotRegistered {
        get {
            return ResourceManager.GetString("Error_DQ_NotRegistered", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Duplicate file id found: '{0}'
    ///  
    /// </summary>
    internal static string Error_DuplicateFileId_Found_OneArgs {
        get {
            return ResourceManager.GetString("Error_DuplicateFileId_Found_OneArgs", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    equality comparer
    ///  
    /// </summary>
    internal static string Error_EqualityComparer {
        get {
            return ResourceManager.GetString("Error_EqualityComparer", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Failed to read value due to checksum mismatch. Checksum: {0} ExpectedChecksum: {1}.
    ///  
    /// </summary>
    internal static string Error_FailedReadValue_ChecksumMismatch_TwoArgs {
        get {
            return ResourceManager.GetString("Error_FailedReadValue_ChecksumMismatch_TwoArgs", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    A block of the file is corrupt ({0}).
    ///  
    /// </summary>
    internal static string Error_FileBlock_Corrupt {
        get {
            return ResourceManager.GetString("Error_FileBlock_Corrupt", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    File path does not exist: {0}
    ///  
    /// </summary>
    internal static string Error_FilePath_Null {
        get {
            return ResourceManager.GetString("Error_FilePath_Null", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    File path is null or empty.
    ///  
    /// </summary>
    internal static string Error_FilePath_Null_NoArgs {
        get {
            return ResourceManager.GetString("Error_FilePath_Null_NoArgs", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    File properties section is corrupt ({0}).
    ///  
    /// </summary>
    internal static string Error_FileProperties_Corrupt {
        get {
            return ResourceManager.GetString("Error_FileProperties_Corrupt", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    property size extends beyond the section
    ///  
    /// </summary>
    internal static string Error_FileProperties_LargeSize {
        get {
            return ResourceManager.GetString("Error_FileProperties_LargeSize", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    property size is negative
    ///  
    /// </summary>
    internal static string Error_FileProperties_NegativeSize {
        get {
            return ResourceManager.GetString("Error_FileProperties_NegativeSize", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    incorrect section size
    ///  
    /// </summary>
    internal static string Error_FileProperties_SectionSize {
        get {
            return ResourceManager.GetString("Error_FileProperties_SectionSize", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    File properties section is corrupt ({0})
    ///  
    /// </summary>
    internal static string Error_FilePropertySection_Corrupt {
        get {
            return ResourceManager.GetString("Error_FilePropertySection_Corrupt", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    File properties section is corrupt (property size extends beyond the section).
    ///  
    /// </summary>
    internal static string Error_FilePropertySection_CorruptSizeExtend {
        get {
            return ResourceManager.GetString("Error_FilePropertySection_CorruptSizeExtend", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    File properties section is corrupt (incorrect section size).
    ///  
    /// </summary>
    internal static string Error_FilePropertySection_CorruptSizeIncorrect {
        get {
            return ResourceManager.GetString("Error_FilePropertySection_CorruptSizeIncorrect", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    File properties section is corrupt (property size is negative) {0}.
    ///  
    /// </summary>
    internal static string Error_FilePropertySection_CorruptSizeNegative_OneArgs {
        get {
            return ResourceManager.GetString("Error_FilePropertySection_CorruptSizeNegative_OneArgs", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    File properties section is missing
    ///  
    /// </summary>
    internal static string Error_FilePropertySection_Missing {
        get {
            return ResourceManager.GetString("Error_FilePropertySection_Missing", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    filter
    ///  
    /// </summary>
    internal static string Error_Filter {
        get {
            return ResourceManager.GetString("Error_Filter", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    firstKey
    ///  
    /// </summary>
    internal static string Error_FirstKey {
        get {
            return ResourceManager.GetString("Error_FirstKey", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Passed type is not a generic type
    ///  
    /// </summary>
    internal static string Error_GenericType_Expected {
        get {
            return ResourceManager.GetString("Error_GenericType_Expected", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    T must be ICloneable or value type.
    ///  
    /// </summary>
    internal static string Error_ICloneableOrValueType_Expected {
        get {
            return ResourceManager.GetString("Error_ICloneableOrValueType_Expected", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Prefix - {0} must be an absolute Uri
    ///  
    /// </summary>
    internal static string Error_InboundCallbacks_PrefixUri {
        get {
            return ResourceManager.GetString("Error_InboundCallbacks_PrefixUri", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Callback by Prefix - {0} already exists.
    ///  
    /// </summary>
    internal static string Error_InboundCallbacks_Prefix_AlreadyExists {
        get {
            return ResourceManager.GetString("Error_InboundCallbacks_Prefix_AlreadyExists", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    InitialOffset
    ///  
    /// </summary>
    internal static string Error_InitialOffset {
        get {
            return ResourceManager.GetString("Error_InitialOffset", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Invalid backup. An expected file does not exist in the backup: {0}
    ///  
    /// </summary>
    internal static string Error_InvalidBackup {
        get {
            return ResourceManager.GetString("Error_InvalidBackup", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Error_Item
    ///  
    /// </summary>
    internal static string Error_Item {
        get {
            return ResourceManager.GetString("Error_Item", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    key
    ///  
    /// </summary>
    internal static string Error_Key {
        get {
            return ResourceManager.GetString("Error_Key", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Key checkpoint file cannot be deserialized (unknown version number).
    ///  
    /// </summary>
    internal static string Error_KeyCheckpointFile_Deserialized {
        get {
            return ResourceManager.GetString("Error_KeyCheckpointFile_Deserialized", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Unknown record kind: {0}
    ///  
    /// </summary>
    internal static string Error_KeyCheckpointFile_RecordKind {
        get {
            return ResourceManager.GetString("Error_KeyCheckpointFile_RecordKind", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Failed to read block of keys due to checksum mismatch. Checksum: {0} ExpectedChecksum: {1}.
    ///  
    /// </summary>
    internal static string Error_KeyCheckpoint_FailedToRead_Checksum {
        get {
            return ResourceManager.GetString("Error_KeyCheckpoint_FailedToRead_Checksum", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    keyConverter
    ///  
    /// </summary>
    internal static string Error_KeyConverter {
        get {
            return ResourceManager.GetString("Error_KeyConverter", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    lastKey
    ///  
    /// </summary>
    internal static string Error_LastKey {
        get {
            return ResourceManager.GetString("Error_LastKey", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    lockMode
    ///  
    /// </summary>
    internal static string Error_LockMode {
        get {
            return ResourceManager.GetString("Error_LockMode", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    lockTimeout
    ///  
    /// </summary>
    internal static string Error_LockTimeout {
        get {
            return ResourceManager.GetString("Error_LockTimeout", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    MessageWaiter.SetResult must be called with InboundBaseStreamWireMessage parameter
    ///  
    /// </summary>
    internal static string Error_MessageAwaiter_SetResult_Parameter {
        get {
            return ResourceManager.GetString("Error_MessageAwaiter_SetResult_Parameter", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    metadata
    ///  
    /// </summary>
    internal static string Error_Metadata {
        get {
            return ResourceManager.GetString("Error_Metadata", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Metadata file cannot be deserialized (unknown version number).
    ///  
    /// </summary>
    internal static string Error_MetadataManager_Deserialized {
        get {
            return ResourceManager.GetString("Error_MetadataManager_Deserialized", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    File with id '{0}' does not exist."
    ///  
    /// </summary>
    internal static string Error_MetadataManager_FileDoesNotExist {
        get {
            return ResourceManager.GetString("Error_MetadataManager_FileDoesNotExist", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    File with id '{0}' already exists.
    ///  
    /// </summary>
    internal static string Error_MetadataManager_FileExists {
        get {
            return ResourceManager.GetString("Error_MetadataManager_FileExists", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    OperationData contained {0} array segments, but expected to find {1} array segments
    ///  
    /// </summary>
    internal static string Error_MetadataOperationData_ExpectedSegments {
        get {
            return ResourceManager.GetString("Error_MetadataOperationData_ExpectedSegments", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Metadata file is corrupt (checksum mismatch) Checksum: {0} ExpectedChecksum: {1}
    ///  
    /// </summary>
    internal static string Error_Metadata_Corrupt_ChecksumMismatch_TwoArgs {
        get {
            return ResourceManager.GetString("Error_Metadata_Corrupt_ChecksumMismatch_TwoArgs", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Metadata file is corrupt (file count mismatch) MetadataCount: {0} FileCount: {1}.
    ///  
    /// </summary>
    internal static string Error_Metadata_Corrupt_FileCountMismatch_TwoArgs {
        get {
            return ResourceManager.GetString("Error_Metadata_Corrupt_FileCountMismatch_TwoArgs", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Metadata file is corrupt (incorrect chunk sizes).
    ///  
    /// </summary>
    internal static string Error_Metadata_Corrupt_IncorrectSize {
        get {
            return ResourceManager.GetString("Error_Metadata_Corrupt_IncorrectSize", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Metadata file is corrupt (negative chunk size) {0}.
    ///  
    /// </summary>
    internal static string Error_Metadata_Corrupt_NegativeSize_OneArgs {
        get {
            return ResourceManager.GetString("Error_Metadata_Corrupt_NegativeSize_OneArgs", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Duplicate file id found :'{0}'
    ///  
    /// </summary>
    internal static string Error_Metadata_DuplicateFileId {
        get {
            return ResourceManager.GetString("Error_Metadata_DuplicateFileId", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Metadata file is corrupt ({0}).
    ///  
    /// </summary>
    internal static string Error_Metadata_FileCorrupt {
        get {
            return ResourceManager.GetString("Error_Metadata_FileCorrupt", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    file count mismatch
    ///  
    /// </summary>
    internal static string Error_Metadata_FileCountMismatch {
        get {
            return ResourceManager.GetString("Error_Metadata_FileCountMismatch", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    incorrect chunk size
    ///  
    /// </summary>
    internal static string Error_Metadata_IncorrectChunk {
        get {
            return ResourceManager.GetString("Error_Metadata_IncorrectChunk", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    negative chunk size
    ///  
    /// </summary>
    internal static string Error_Metadata_NegativeChunk {
        get {
            return ResourceManager.GetString("Error_Metadata_NegativeChunk", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    mode
    ///  
    /// </summary>
    internal static string Error_Mode {
        get {
            return ResourceManager.GetString("Error_Mode", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Name starts with reserved prefix.
    ///  
    /// </summary>
    internal static string Error_Name_PrefixReserved {
        get {
            return ResourceManager.GetString("Error_Name_PrefixReserved", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    negative block size
    ///  
    /// </summary>
    internal static string Error_Negative_BlockSize {
        get {
            return ResourceManager.GetString("Error_Negative_BlockSize", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    negative stream offset
    ///  
    /// </summary>
    internal static string Error_Negative_StreamOffset {
        get {
            return ResourceManager.GetString("Error_Negative_StreamOffset", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    no records
    ///  
    /// </summary>
    internal static string Error_No_Records {
        get {
            return ResourceManager.GetString("Error_No_Records", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    {0} : GetCopyState The parameter copyContext is null. This might be caused by deployment bug that 'hasPersistedState' attribute is false
    ///  
    /// </summary>
    internal static string Error_NullCopyContext {
        get {
            return ResourceManager.GetString("Error_NullCopyContext", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Offset only supports positive long values
    ///  
    /// </summary>
    internal static string Error_OffsetPositiveLongValue {
        get {
            return ResourceManager.GetString("Error_OffsetPositiveLongValue", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    operationData
    ///  
    /// </summary>
    internal static string Error_OperationData {
        get {
            return ResourceManager.GetString("Error_OperationData", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    partitionKey format unsupported
    ///  
    /// </summary>
    internal static string Error_PartitionKey_Format_Unsupported {
        get {
            return ResourceManager.GetString("Error_PartitionKey_Format_Unsupported", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    ServiceInstanceName must be an absolute Uri
    ///  
    /// </summary>
    internal static string Error_PartitionKey_ServiceInstanceName {
        get {
            return ResourceManager.GetString("Error_PartitionKey_ServiceInstanceName", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Physical log already exists
    ///  
    /// </summary>
    internal static string Error_PhysicalLog_Exists {
        get {
            return ResourceManager.GetString("Error_PhysicalLog_Exists", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    QueueInitializationContext cannot be deserialized (unknown version number: {0}, expected version number: {1})
    ///  
    /// </summary>
    internal static string Error_QueueInitializationContext_Deserialized {
        get {
            return ResourceManager.GetString("Error_QueueInitializationContext_Deserialized", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    record block extends past the end of file
    ///  
    /// </summary>
    internal static string Error_RecordBlock_ExtendsPastFileEnd {
        get {
            return ResourceManager.GetString("Error_RecordBlock_ExtendsPastFileEnd", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    missing record block size
    ///  
    /// </summary>
    internal static string Error_RecordBlock_MissingBlockSize {
        get {
            return ResourceManager.GetString("Error_RecordBlock_MissingBlockSize", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    missing checksum
    ///  
    /// </summary>
    internal static string Error_RecordBlock_MissingChecksum {
        get {
            return ResourceManager.GetString("Error_RecordBlock_MissingChecksum", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    record block size is negative
    ///  
    /// </summary>
    internal static string Error_RecordBlock_NegativeBlockSize {
        get {
            return ResourceManager.GetString("Error_RecordBlock_NegativeBlockSize", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    records have been truncated
    ///  
    /// </summary>
    internal static string Error_Records_Truncated {
        get {
            return ResourceManager.GetString("Error_Records_Truncated", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Returned reliable object of type {0} cannot be casted to requested type {1}
    ///  
    /// </summary>
    internal static string Error_ReliableObject_CannotCast {
        get {
            return ResourceManager.GetString("Error_ReliableObject_CannotCast", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Empty message sent via reliable session
    ///  
    /// </summary>
    internal static string Error_ReliableSession_EmptyMessage {
        get {
            return ResourceManager.GetString("Error_ReliableSession_EmptyMessage", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Null argument invalid for IReliableMessagingSession.SendAsync
    ///  
    /// </summary>
    internal static string Error_ReliableSession_NullArgument_SendAsync {
        get {
            return ResourceManager.GetString("Error_ReliableSession_NullArgument_SendAsync", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Invalid Replicator Endpoint protocol: {0} Tcp is the only supported replicator endpoint protocol
    ///  
    /// </summary>
    internal static string Error_ReliableSMReplica_InvalidEndpointProtocol {
        get {
            return ResourceManager.GetString("Error_ReliableSMReplica_InvalidEndpointProtocol", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    MaxAccumulatedBackupLogSizeInMB = {0} It should be less than MaxStreamSizeInMB {1}
    ///  
    /// </summary>
    internal static string Error_ReliableSMSettings_BackupLogSizeGreaterThanMax {
        get {
            return ResourceManager.GetString("Error_ReliableSMSettings_BackupLogSizeGreaterThanMax", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Test_LoggingEngine = {0} is not recognized. Needs to be one of {1}
    ///  
    /// </summary>
    internal static string Error_ReliableSMSettings_InvalidLoggingEngine {
        get {
            return ResourceManager.GetString("Error_ReliableSMSettings_InvalidLoggingEngine", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    MaxAccumulatedBackupLogSizeInMB = {0}.  It should be greater than 0
    ///  
    /// </summary>
    internal static string Error_ReliableSMSettings_BackupLogSizeNegative {
        get {
            return ResourceManager.GetString("Error_ReliableSMSettings_BackupLogSizeNegative", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    CheckpointThresholdInMB = {0}. It should be greater than 0 
    ///  
    /// </summary>
    internal static string Error_ReliableSMSettings_CheckpointNegative {
        get {
            return ResourceManager.GetString("Error_ReliableSMSettings_CheckpointNegative", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    MaxMetadataSizeInKB must be a multiple of 4
    ///  
    /// </summary>
    internal static string Error_ReliableSMSettings_MaxMetadataSize_Condition {
        get {
            return ResourceManager.GetString("Error_ReliableSMSettings_MaxMetadataSize_Condition", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    MaxMetadataSizeInKB must not be negative
    ///  
    /// </summary>
    internal static string Error_ReliableSMSettings_MaxMetadataSize_Positive {
        get {
            return ResourceManager.GetString("Error_ReliableSMSettings_MaxMetadataSize_Positive", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    MaxRecordSizeInKB must be a multiple of 4
    ///  
    /// </summary>
    internal static string Error_ReliableSMSettings_MaxRecordSize_Condition_Multiple {
        get {
            return ResourceManager.GetString("Error_ReliableSMSettings_MaxRecordSize_Condition_Multiple", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    MaxRecordSizeInKB must be greater than or equal to 128
    ///  
    /// </summary>
    internal static string Error_ReliableSMSettings_MaxRecordSize_GreaterThan_128 {
        get {
            return ResourceManager.GetString("Error_ReliableSMSettings_MaxRecordSize_GreaterThan_128", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    MaxStreamSizeInMB must be greater than CheckpointThresholdInMB when the log is not optimized for low disk usage
    ///  
    /// </summary>
    internal static string Error_ReliableSMSettings_MaxRecordSize_GreaterThan_CheckpointThreshold {
        get {
            return ResourceManager.GetString("Error_ReliableSMSettings_MaxRecordSize_GreaterThan_CheckpointThreshold", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    MaxStreamSizeInMB * 1024 must be larger or equal to MaxRecordSizeInKB * 16
    ///  
    /// </summary>
    internal static string Error_ReliableSMSettings_MaxStreamSize_GreaterThan_MaxRecordSize {
        get {
            return ResourceManager.GetString("Error_ReliableSMSettings_MaxStreamSize_GreaterThan_MaxRecordSize", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    MaxWriteQueueDepthInKB must be zero or a multiple of 4
    ///  
    /// </summary>
    internal static string Error_ReliableSMSettings_MaxWriteQueueDepth_Conditions {
        get {
            return ResourceManager.GetString("Error_ReliableSMSettings_MaxWriteQueueDepth_Conditions", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    MaxWriteQueueDepthInKB must not be negative
    ///  
    /// </summary>
    internal static string Error_ReliableSMSettings_MaxWriteQueueDepth_Positive {
        get {
            return ResourceManager.GetString("Error_ReliableSMSettings_MaxWriteQueueDepth_Positive", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    If shared log id is empty then shared log path should be empty
    ///  
    /// </summary>
    internal static string Error_ReliableSMSettings_SharedLogId_Empy {
        get {
            return ResourceManager.GetString("Error_ReliableSMSettings_SharedLogId_Empy", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    SharedLogId should be a well-formed guid such as {F67D29E7-DFAB-437e-9F9F-5AC901D3F0BC}
    ///  
    /// </summary>
    internal static string Error_ReliableSMSettings_SharedLogId_Format {
        get {
            return ResourceManager.GetString("Error_ReliableSMSettings_SharedLogId_Format", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    If shared log id is not empty then shared log path should be set
    ///  
    /// </summary>
    internal static string Error_ReliableSMSettings_SharedLogPath_Empty {
        get {
            return ResourceManager.GetString("Error_ReliableSMSettings_SharedLogPath_Empty", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    SharedLogPath should be a well-formed absolute pathname
    ///  
    /// </summary>
    internal static string Error_ReliableSMSettings_SharedLogPath_Format {
        get {
            return ResourceManager.GetString("Error_ReliableSMSettings_SharedLogPath_Format", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    replicatorTransaction
    ///  
    /// </summary>
    internal static string Error_ReplicatorTransaction {
        get {
            return ResourceManager.GetString("Error_ReplicatorTransaction", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    State manager blocks section is corrupt (incorrect section size)
    ///  
    /// </summary>
    internal static string Error_SMBlocksCorrupt {
        get {
            return ResourceManager.GetString("Error_SMBlocksCorrupt", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    StateManagerFile is corrupt ({0})
    ///  
    /// </summary>
    internal static string Error_SMFile_Corrupt {
        get {
            return ResourceManager.GetString("Error_SMFile_Corrupt", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    lock has been disposed {0}
    ///  
    /// </summary>
    internal static string Error_SMLockContext_Disposed {
        get {
            return ResourceManager.GetString("Error_SMLockContext_Disposed", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Lock timed out for key {0}
    ///  
    /// </summary>
    internal static string Error_SMLockContext_TimedOut {
        get {
            return ResourceManager.GetString("Error_SMLockContext_TimedOut", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    State provider {0} already exists
    ///  
    /// </summary>
    internal static string Error_SP_Already_Exists {
        get {
            return ResourceManager.GetString("Error_SP_Already_Exists", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    State provider {0} cannot be created and deleted in the same transaction
    ///  
    /// </summary>
    internal static string Error_SP_CreatedDestroyed_Tx {
        get {
            return ResourceManager.GetString("Error_SP_CreatedDestroyed_Tx", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    State provider must have a name
    ///  
    /// </summary>
    internal static string Error_SP_Name_Required {
        get {
            return ResourceManager.GetString("Error_SP_Name_Required", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Registration failed as the given state provider name {0} is reserved
    ///  
    /// </summary>
    internal static string Error_SP_Name_Reserved {
        get {
            return ResourceManager.GetString("Error_SP_Name_Reserved", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    State provider {0} does not exist
    ///  
    /// </summary>
    internal static string Error_SP_Null {
        get {
            return ResourceManager.GetString("Error_SP_Null", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    State provider must have a parameterless constructor
    ///  
    /// </summary>
    internal static string Error_SP_ParameterlessConstructor {
        get {
            return ResourceManager.GetString("Error_SP_ParameterlessConstructor", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    stateProvider
    ///  
    /// </summary>
    internal static string Error_StateProvider {
        get {
            return ResourceManager.GetString("Error_StateProvider", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    stateProviderFactory
    ///  
    /// </summary>
    internal static string Error_StateProviderFactory {
        get {
            return ResourceManager.GetString("Error_StateProviderFactory", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    stateProviderName
    ///  
    /// </summary>
    internal static string Error_StateProviderName {
        get {
            return ResourceManager.GetString("Error_StateProviderName", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    StoreInitializationParameters cannot be deserialized (unknown version number: {0}, expected version number: {1})
    ///  
    /// </summary>
    internal static string Error_StoreInitParameters_Deserialized {
        get {
            return ResourceManager.GetString("Error_StoreInitParameters_Deserialized", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Attempt to close an inbound stream
    ///  
    /// </summary>
    internal static string Error_Stream_Close_Inbound {
        get {
            return ResourceManager.GetString("Error_Stream_Close_Inbound", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Attempt to close a stream(with state={0}) that has not opened
    ///  
    /// </summary>
    internal static string Error_Stream_Close_Unopened {
        get {
            return ResourceManager.GetString("Error_Stream_Close_Unopened", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Attempt to delete an inbound stream
    ///  
    /// </summary>
    internal static string Error_Stream_Delete_Inbound {
        get {
            return ResourceManager.GetString("Error_Stream_Delete_Inbound", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Attempt to delete a stream(with state={0}) that has not been closed
    ///  
    /// </summary>
    internal static string Error_Stream_Delete_UnopenedStream {
        get {
            return ResourceManager.GetString("Error_Stream_Delete_UnopenedStream", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    GetDeleteSequenceNumberAsync invoked on inbound stream
    ///  
    /// </summary>
    internal static string Error_Stream_GetDeleted_Invoked_Inbound {
        get {
            return ResourceManager.GetString("Error_Stream_GetDeleted_Invoked_Inbound", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    GetLastSequenceNumberReceived invoked on outbound stream
    ///  
    /// </summary>
    internal static string Error_Stream_GetLSNReceived_Invoked_Outbound {
        get {
            return ResourceManager.GetString("Error_Stream_GetLSNReceived_Invoked_Outbound", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    GetLastSequenceNumberSent invoked on inbound stream
    ///  
    /// </summary>
    internal static string Error_Stream_GetLSNSent_Invoked_Inbound {
        get {
            return ResourceManager.GetString("Error_Stream_GetLSNSent_Invoked_Inbound", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    GetLastSequenceNumberSent invoked on stream(with state={0}) that has not been opened
    ///  
    /// </summary>
    internal static string Error_Stream_GetLSN_Invoked_UnopenedStream {
        get {
            return ResourceManager.GetString("Error_Stream_GetLSN_Invoked_UnopenedStream", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Attempt to open an inbound stream
    ///  
    /// </summary>
    internal static string Error_Stream_Open_Inbound {
        get {
            return ResourceManager.GetString("Error_Stream_Open_Inbound", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Attempt to open an outbound stream that is in Closing or Closed state
    ///  
    /// </summary>
    internal static string Error_Stream_Open_Outbound_Closing {
        get {
            return ResourceManager.GetString("Error_Stream_Open_Outbound_Closing", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Attempt to open stream with uncommitted or aborted create transaction
    ///  
    /// </summary>
    internal static string Error_Stream_Open_UncommittedTx {
        get {
            return ResourceManager.GetString("Error_Stream_Open_UncommittedTx", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Attempt to receive in an outbound stream
    ///  
    /// </summary>
    internal static string Error_Stream_Receive_Outbound {
        get {
            return ResourceManager.GetString("Error_Stream_Receive_Outbound", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Attempt to send in an inbound stream
    ///  
    /// </summary>
    internal static string Error_Stream_Send_Inbound {
        get {
            return ResourceManager.GetString("Error_Stream_Send_Inbound", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Attempt to Send in a stream(with state={0}) that is not in Open state
    ///  
    /// </summary>
    internal static string Error_Stream_Send_Unopened {
        get {
            return ResourceManager.GetString("Error_Stream_Send_Unopened", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    timeout is less than -1 or greater than Int32.MaxValue in Ticks
    ///  
    /// </summary>
    internal static string Error_Stream_Timeout {
        get {
            return ResourceManager.GetString("Error_Stream_Timeout", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    TDeletedItem has no value.
    ///  
    /// </summary>
    internal static string Error_TDeletedItem_NoValue {
        get {
            return ResourceManager.GetString("Error_TDeletedItem_NoValue", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Offset only supports positive long values
    ///  
    /// </summary>
    internal static string Error_TInsertedItem_Offset_Positive {
        get {
            return ResourceManager.GetString("Error_TInsertedItem_Offset_Positive", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    transaction
    ///  
    /// </summary>
    internal static string Error_Transaction {
        get {
            return ResourceManager.GetString("Error_Transaction", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    backupDirectory must exist and be empty.
    ///  
    /// </summary>
    internal static string Error_TStore_BackupDirectory {
        get {
            return ResourceManager.GetString("Error_TStore_BackupDirectory", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Invalid backup. An expected file does not exist in the backup: {0}
    ///  
    /// </summary>
    internal static string Error_TStore_InvalidBackup {
        get {
            return ResourceManager.GetString("Error_TStore_InvalidBackup", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    unexpected operation type {0}
    ///  
    /// </summary>
    internal static string Error_TStore_OperationType {
        get {
            return ResourceManager.GetString("Error_TStore_OperationType", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Passed type is not one of the reliable data structure interfaces or default implementations
    ///  
    /// </summary>
    internal static string Error_UnreliableType {
        get {
            return ResourceManager.GetString("Error_UnreliableType", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Unsupported version {0} on deserialization, current version is {1}
    ///  
    /// </summary>
    internal static string Error_Unsupported_Version_Deserialization {
        get {
            return ResourceManager.GetString("Error_Unsupported_Version_Deserialization", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    updateValueFactory
    ///  
    /// </summary>
    internal static string Error_UpdateValueFactory {
        get {
            return ResourceManager.GetString("Error_UpdateValueFactory", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    value
    ///  
    /// </summary>
    internal static string Error_Value {
        get {
            return ResourceManager.GetString("Error_Value", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Failed to read value due to checksum mismatch
    ///  
    /// </summary>
    internal static string Error_ValueCheckpointFile_FailedRead_Checksum {
        get {
            return ResourceManager.GetString("Error_ValueCheckpointFile_FailedRead_Checksum", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Deleted items don't have values.
    ///  
    /// </summary>
    internal static string Error_ValueCheckpoint_DeletedItemValue {
        get {
            return ResourceManager.GetString("Error_ValueCheckpoint_DeletedItemValue", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Value checkpoint file cannot be deserialized (unknown version number)
    ///  
    /// </summary>
    internal static string Error_ValueCheckpoint_Deserialized {
        get {
            return ResourceManager.GetString("Error_ValueCheckpoint_Deserialized", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    TVersionedItem.Offset + TVersionedItem.ValueSize extends beyond the valid stream range
    ///  
    /// </summary>
    internal static string Error_ValueCheckpoint_StreamRangeExceeded {
        get {
            return ResourceManager.GetString("Error_ValueCheckpoint_StreamRangeExceeded", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    TVersionedItem.Offset is negative.
    ///  
    /// </summary>
    internal static string Error_ValueCheckpoint_TVersionedItem_Offset_Negative {
        get {
            return ResourceManager.GetString("Error_ValueCheckpoint_TVersionedItem_Offset_Negative", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    TVersionedItem.ValueSize is negative. {0}
    ///  
    /// </summary>
    internal static string Error_ValueCheckpoint_TVersionedItem_ValueSize_Negative {
        get {
            return ResourceManager.GetString("Error_ValueCheckpoint_TVersionedItem_ValueSize_Negative", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    valueConverter
    ///  
    /// </summary>
    internal static string Error_ValueConverter {
        get {
            return ResourceManager.GetString("Error_ValueConverter", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    valueFactory
    ///  
    /// </summary>
    internal static string Error_ValueFactory {
        get {
            return ResourceManager.GetString("Error_ValueFactory", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    value factory or equality comparer
    ///  
    /// </summary>
    internal static string Error_ValueFactoryOrEqualityComparer {
        get {
            return ResourceManager.GetString("Error_ValueFactoryOrEqualityComparer", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Version mismatch.  Expected version {0}, but read version {1}
    ///  
    /// </summary>
    internal static string Error_VersionMismatch {
        get {
            return ResourceManager.GetString("Error_VersionMismatch", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    streamFactory
    ///  
    /// </summary>
    internal static string StreamFactory {
        get {
            return ResourceManager.GetString("StreamFactory", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    StateManagerFile is corrupt (record block extends past the end of file).
    ///  
    /// </summary>
    internal static string Error_SMFile_Corrupt_BlockExtendPastFile {
        get {
            return ResourceManager.GetString("Error_SMFile_Corrupt_BlockExtendPastFile", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    StateManagerFile is corrupt (block sizes are missing).
    ///  
    /// </summary>
    internal static string Error_SMFile_Corrupt_BlockSizesMissing {
        get {
            return ResourceManager.GetString("Error_SMFile_Corrupt_BlockSizesMissing", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    StateManagerFile is corrupt (metadata count mismatch).
    ///  
    /// </summary>
    internal static string Error_SMFile_Corrupt_MetadataCountMismatch {
        get {
            return ResourceManager.GetString("Error_SMFile_Corrupt_MetadataCountMismatch", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    StateManagerFile is corrupt (checksum mismatch).
    ///  
    /// </summary>
    internal static string Error_SMFile_Corrupt_MismatchedChecksum {
        get {
            return ResourceManager.GetString("Error_SMFile_Corrupt_MismatchedChecksum", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    StateManagerFile is corrupt (missing checksum).
    ///  
    /// </summary>
    internal static string Error_SMFile_Corrupt_MissingChecksum {
        get {
            return ResourceManager.GetString("Error_SMFile_Corrupt_MissingChecksum", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    StateManagerFile is corrupt (missing record size).
    ///  
    /// </summary>
    internal static string Error_SMFile_Corrupt_MissingRecordSize {
        get {
            return ResourceManager.GetString("Error_SMFile_Corrupt_MissingRecordSize", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    StateManagerFile is corrupt (record size is negative)
    ///  
    /// </summary>
    internal static string Error_SMFile_Corrupt_NegativeRecordSize {
        get {
            return ResourceManager.GetString("Error_SMFile_Corrupt_NegativeRecordSize", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    StateManagerFile is corrupt (record extends past the end of file).
    ///  
    /// </summary>
    internal static string Error_SMFile_Corrupt_RecordExtendsPastFile {
        get {
            return ResourceManager.GetString("Error_SMFile_Corrupt_RecordExtendsPastFile", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    StateManagerFile is corrupt (incorrect record size).
    ///  
    /// </summary>
    internal static string Error_SMFile_Corrupt_RecordSize {
        get {
            return ResourceManager.GetString("Error_SMFile_Corrupt_RecordSize", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Unknown copy protocol version number: {0}
    ///  
    /// </summary>
    internal static string Error_SMFile_UnknownCopyProtocol_OneArg {
        get {
            return ResourceManager.GetString("Error_SMFile_UnknownCopyProtocol_OneArg", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Unknown state manager copy operation: {0}
    ///  
    /// </summary>
    internal static string Error_SMFile_UnknownSMCopyOperation_OneArg {
        get {
            return ResourceManager.GetString("Error_SMFile_UnknownSMCopyOperation_OneArg", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    ReplicatorHealthBackupCallbackSlow
    ///  
    /// </summary>
    internal static string HealthProperty_BackupCallbackSlow {
        get {
            return ResourceManager.GetString("HealthProperty_BackupCallbackSlow", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    BackupManager.CallBackupCallbackAsync
    ///  
    /// </summary>
    internal static string ReplicatorApiMonitor_BackupApiName {
        get {
            return ResourceManager.GetString("ReplicatorApiMonitor_BackupApiName", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    BackupCallback Monitoring Interval not set
    ///  
    /// </summary>
    internal static string ReplicatorApiMonitor_InvalidMonitoringInterval {
        get {
            return ResourceManager.GetString("ReplicatorApiMonitor_InvalidMonitoringInterval", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    {0} not found in ReplicatorHealthProperties
    ///  
    /// </summary>
    internal static string ReplicatorApiMonitor_InvalidProperty {
        get {
            return ResourceManager.GetString("ReplicatorApiMonitor_InvalidProperty", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    ReplicatorApiMonitor.replicatorSettings not set
    ///  
    /// </summary>
    internal static string ReplicatorApiMonitor_NullSettings {
        get {
            return ResourceManager.GetString("ReplicatorApiMonitor_NullSettings", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    ReplicatorApiMonitor
    ///  
    /// </summary>
    internal static string ReplicatorApiMonitor_TraceTypeBase {
        get {
            return ResourceManager.GetString("ReplicatorApiMonitor_TraceTypeBase", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    MinLogSizeInMB {0} must be greater than 0
    ///  
    /// </summary>
    internal static string Error_ReliableSMSettings_MinLogSizeInMB_LessThanOne {
        get {
            return ResourceManager.GetString("Error_ReliableSMSettings_MinLogSizeInMB_LessThanOne", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    SlowApiMonitoringDuration = {0}. SlowApiMonitoring must be greater than zero and less than TimeSpan.MaxValue, default = {1}. A value of zero disables api monitoring.
    ///  
    /// </summary>
    internal static string Error_Invalid_SlowApiMonitoringDuration {
        get {
            return ResourceManager.GetString("Error_Invalid_SlowApiMonitoringDuration", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    ReliableConcurrentQueue has closed or is closing.
    ///  
    /// </summary>
    internal static string ReliableConcurrentQueue_Closing {
        get {
            return ResourceManager.GetString("ReliableConcurrentQueue_Closing", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Dequeue rejected as the queue is empty.
    ///  
    /// </summary>
    internal static string ReliableConcurrentQueue_DequeueQueueEmpty {
        get {
            return ResourceManager.GetString("ReliableConcurrentQueue_DequeueQueueEmpty", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Enqueue rejected as the queue is full.  Max size: {0}
    ///  
    /// </summary>
    internal static string ReliableConcurrentQueue_EnqueueQueueFull {
        get {
            return ResourceManager.GetString("ReliableConcurrentQueue_EnqueueQueueFull", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Invalid transaction (transaction has already been committed or aborted).  Id: {0}
    ///  
    /// </summary>
    internal static string ReliableConcurrentQueue_InvalidTransaction {
        get {
            return ResourceManager.GetString("ReliableConcurrentQueue_InvalidTransaction", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    ReliableConcurrentQueue has not been initialized.
    ///  
    /// </summary>
    internal static string ReliableConcurrentQueue_NotInitialized {
        get {
            return ResourceManager.GetString("ReliableConcurrentQueue_NotInitialized", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    ReliableConcurrentQueue has not been opened.
    ///  
    /// </summary>
    internal static string ReliableConcurrentQueue_NotOpened {
        get {
            return ResourceManager.GetString("ReliableConcurrentQueue_NotOpened", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Null transaction.
    ///  
    /// </summary>
    internal static string ReliableConcurrentQueue_NullTransaction {
        get {
            return ResourceManager.GetString("ReliableConcurrentQueue_NullTransaction", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    ReliableConcurrentQueue has not been recovered from disk.
    ///  
    /// </summary>
    internal static string ReliableConcurrentQueue_NotRecovered {
        get {
            return ResourceManager.GetString("ReliableConcurrentQueue_NotRecovered", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Test_LoggingEngine must non-null
    ///  
    /// </summary>
    internal static string Error_Test_LoggingEngine_Null {
        get {
            return ResourceManager.GetString("Error_Test_LoggingEngine_Null", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Failed to acquire lock within timeout.
    ///  
    /// </summary>
    internal static string PrimeLockThrows_LockTimeout {
        get {
            return ResourceManager.GetString("PrimeLockThrows_LockTimeout", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Replication did not complete within the timeout.
    ///  
    /// </summary>
    internal static string ReplicationHelper_ReplicationTimeout {
        get {
            return ResourceManager.GetString("ReplicationHelper_ReplicationTimeout", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    MultiRecordRead too many retries
    ///  
    /// </summary>
    internal static string MultirecordTooManyRetries {
        get {
            return ResourceManager.GetString("MultirecordTooManyRetries", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    {0}: Below type used in Reliable Collection {2} could not be loaded. This commonly indicates that the user application is not backwards/forwards compatible. Common compatibility bugs that lead to this error are adding a new type or changing an assembly name without two phase upgrade, or removing a type. If this was caused by user's backwards/forwards compatibility bug, one way to mitigate the issue is to force the upgrade through without safety checks.\r\n\r\n{1}
    ///  
    /// </summary>
    internal static string Assert_SM_TypeNotFound {
        get {
            return ResourceManager.GetString("Assert_SM_TypeNotFound", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    {0} Folder: {1} A backup chain cannot contain backups from different data loss numbers. BackupId: {2} ParentId: {3} DL: {4} CN: {5} LSN: {6}
    ///  
    /// </summary>
    internal static string Error_BackupFolderInfo_DifferentDataLossNumber {
        get {
            return ResourceManager.GetString("Error_BackupFolderInfo_DifferentDataLossNumber", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    {0} Folder: {1} Beginning of the backup chain must be full backup. BackupId: {2} ParentId: {3} DL: {4} CN: {5} LSN: {6}
    ///  
    /// </summary>
    internal static string Error_BackupFolderInfo_MustStartWithFullBackup {
        get {
            return ResourceManager.GetString("Error_BackupFolderInfo_MustStartWithFullBackup", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    LogTruncationInterval must be positive
    ///  
    /// </summary>
    internal static string Error_Invalid_LogTruncationInterval {
        get {
            return ResourceManager.GetString("Error_Invalid_LogTruncationInterval", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    {0}: Backup not completed within timeout. This is due to replicate backup log record failed with transient exception. BackupId: {1} DL: {2} CN: {3} LSN: {4}
    ///  
    /// </summary>
    internal static string Error_BackupTimeout_ReplicateFailed {
        get {
            return ResourceManager.GetString("Error_BackupTimeout_ReplicateFailed", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Timed out waiting for replication; id={0}, timeout={1}ms
    ///  
    /// </summary>
    internal static string ReplicationTimeout_StateManager {
        get {
            return ResourceManager.GetString("ReplicationTimeout_StateManager", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Timed out waiting for replication; id={0}, timeout={1}ms, txn={2}
    ///  
    /// </summary>
    internal static string ReplicationTimeout_TStore {
        get {
            return ResourceManager.GetString("ReplicationTimeout_TStore", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Timed out waiting for {0} lock on table; id={1}, timeout={2}ms
    ///  
    /// </summary>
    internal static string LockTimeout_LockManager_TableLock {
        get {
            return ResourceManager.GetString("LockTimeout_LockManager_TableLock", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Timed out waiting for {0} lock on key; id={1}, timeout={2}ms, txn={3}, lockResourceNameHash={4}; oldest txn with lock={5}
    ///  
    /// </summary>
    internal static string LockTimeout_TStore_KeyLock {
        get {
            return ResourceManager.GetString("LockTimeout_TStore_KeyLock", resourceCulture);
        }
    }


    /// <summary>
    ///   Looks up a localized string similar to 
    ///    Timed out waiting for {0} lock on table; id={1}, timeout={2}ms, txn={3}
    ///  
    /// </summary>
    internal static string LockTimeout_TStore_TableLock {
        get {
            return ResourceManager.GetString("LockTimeout_TStore_TableLock", resourceCulture);
        }
    }

}

}

