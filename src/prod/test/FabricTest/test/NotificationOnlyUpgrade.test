votes 10 20
namingservice 1 3 1
cmservice 3 1
fmservice 3 1

# Avoid automatic cleanup of unused application types
!setcfg Management.CleanupUnusedApplicationTypes=false

cleantest

+10
+20
+30
verify

# 
# Application version 1.0
#
app.add version10 TestApp 1.0
app.clear version10

app.servicepack version10 ServicePackage1 version=1.0

app.servicetypes version10 ServicePackage1 ServiceTypeA stateful persist
app.servicetypes version10 ServicePackage1 ServiceTypeB stateless

app.codepack version10 ServicePackage1 CodeA types=ServiceTypeA version=1.0
app.codepack version10 ServicePackage1 CodeB types=ServiceTypeB version=1.0

app.reqservices version10 ServiceA ServiceTypeA stateful partition=1 replica=3
app.reqservices version10 ServiceB ServiceTypeB stateless partition=1 instance=3

app.upload version10

# 
# Application version 1.1. Only update config & service package
#

app.add version11 TestApp 1.1
app.clear version11

app.servicepack version11 ServicePackage1 version=1.1

app.servicetypes version11 ServicePackage1 ServiceTypeA stateful persist
app.servicetypes version11 ServicePackage1 ServiceTypeB stateless

app.codepack version11 ServicePackage1 CodeA types=ServiceTypeA version=1.0
app.codepack version11 ServicePackage1 CodeB types=ServiceTypeB version=1.0

app.reqservices version11 ServiceA ServiceTypeA stateful partition=1 replica=3
app.reqservices version11 ServiceB ServiceTypeB stateless partition=1 instance=3

app.upload version11

# 
# Application version 1.2. Only update config and service package
#

app.add version12 TestApp 1.2
app.clear version12

app.servicepack version12 ServicePackage1 version=1.2

app.servicetypes version12 ServicePackage1 ServiceTypeA stateful persist
app.servicetypes version12 ServicePackage1 ServiceTypeB stateless

app.codepack version12 ServicePackage1 CodeA types=ServiceTypeA version=1.0
app.codepack version12 ServicePackage1 CodeB types=ServiceTypeB version=1.0

app.reqservices version12 ServiceA ServiceTypeA stateful partition=1 replica=3
app.reqservices version12 ServiceB ServiceTypeB stateless partition=1 instance=3

app.upload version12

# 
# Application version 1.3. Add a code package, update code package and keep one the same
#

app.add version13 TestApp 1.3
app.clear version13

app.servicepack version13 ServicePackage1 version=1.3

app.servicetypes version13 ServicePackage1 ServiceTypeA stateful persist
app.servicetypes version13 ServicePackage1 ServiceTypeB stateless

app.codepack version13 ServicePackage1 CodeA types=ServiceTypeA version=1.0
app.codepack version13 ServicePackage1 CodeB types=ServiceTypeB version=1.1
app.codepack version13 ServicePackage1 CodeC version=1.0

app.reqservices version13 ServiceA ServiceTypeA stateful partition=1 replica=3
app.reqservices version13 ServiceB ServiceTypeB stateless partition=1 instance=3

app.servicetemplate version13 ServiceTypeA stateful partition=1 replica=6

app.upload version13

#
# Provision application version 1.0
#
provisionapp version10

#
# Provision application version 1.1
#
provisionapp version11

#
# Provision application version 1.2
#
provisionapp version12

#
# Provision application version 1.3
#
provisionapp version13

#
# Create application version 1.0
#
createapp fabric:/app1 TestApp 1.0
verify

#
# Upgrade application from version 1.0 to 1.1
#
upgradeapp fabric:/app1 1.1 Rolling
verifyupgradeapp fabric:/app1
verify

+40
+50
verify

-30
verify

killcodep 10
killcodep 40
verify

# force restart for this notificaiton only upgrade
upgradeapp fabric:/app1 1.2 Rolling restart
verifyupgradeapp fabric:/app1
verify

killcodep 40
killcodep 20
+60
verify

upgradeapp fabric:/app1 1.3 Rolling
verifyupgradeapp fabric:/app1
verify

createservicefromtemplate fabric:/app1/ServiceA1 ServiceTypeA fabric:/app1
verify

!q
