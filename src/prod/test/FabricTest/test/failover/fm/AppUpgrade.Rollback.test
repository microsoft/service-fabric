votes 10 20 30
cleantest

fmservice 3 2
cmservice 3 2
namingservice 1 3 2

set DummyPLBEnabled true
set UpgradeStatusPollInterval 1
set NamingOperationTimeout 15
set NamingOperationRetryTimeout 75
set ExpectedReplicaUpgradeDuration 3600
set ExpectedNodeFabricUpgradeDuration 3600

# Avoid automatic cleanup of unused application types
!setcfg Management.CleanupUnusedApplicationTypes=false

+10
+20
+30
verify

# 
# Application version V1
#
app.add versionV1 TestApp V1
app.clear versionV1
app.servicepack versionV1 ServicePackageX version=V1
app.servicetypes versionV1 ServicePackageX ServiceTypeX stateful persist
app.codepack versionV1 ServicePackageX CodeX types=ServiceTypeX version=V1
app.reqservices versionV1 ServiceX ServiceTypeX stateful partition=1 replica=3
app.upload versionV1
provisionapp versionV1

# 
# Application version V2
#
app.add versionV2 TestApp V2
app.clear versionV2
app.servicepack versionV2 ServicePackageX version=V2
app.servicetypes versionV2 ServicePackageX ServiceTypeX stateful persist
app.codepack versionV2 ServicePackageX CodeX types=ServiceTypeX version=V2
app.reqservices versionV2 ServiceX ServiceTypeX stateful partition=1 replica=3
app.upload versionV2
provisionapp versionV2

# 
# Application version V3
#
app.add versionV3 TestApp V3
app.clear versionV3
app.servicepack versionV3 ServicePackageX version=V3
app.servicetypes versionV3 ServicePackageX ServiceTypeX stateful persist
app.codepack versionV3 ServicePackageX CodeX types=ServiceTypeX version=V1
app.reqservices versionV3 ServiceX ServiceTypeX stateful partition=1 replica=3
app.upload versionV3
provisionapp versionV3

createapp fabric:/MyApp TestApp V1
verify

!waitforstate FM.Replica.Role.fabric:/MyApp/ServiceX.30 Primary

################################################################################
# TestCase 1: Application upgrade rollback when primary is not upgraded
################################################################################

set RestoreReplicaLocationAfterUpgrade false

upgradeapp fabric:/MyApp V2 Rolling upgrademode=manual

verifyupgradeapp fabric:/MyApp upgradedomains=10_ud

!waitforstate FM.Replica.IsUp.fabric:/MyApp/ServiceX.10 true

rollbackapp fabric:/MyApp
updateappupgrade fabric:/MyApp upgrademode=auto
setrollbackapp fabric:/MyApp V1 failurereason=Interrupted

verifyupgradeapp fabric:/MyApp

!waitforstate FM.Replica.Role.fabric:/MyApp/ServiceX.30 Primary

verify

################################################################################
# TestCase 2: Application upgrade rollback when primary has been upgraded
################################################################################

swapprimary fabric:/MyApp/ServiceX 30 10
!waitforstate FM.Replica.Role.fabric:/MyApp/ServiceX.10 Primary
!waitforstate FM.FT.Reconfig.fabric:/MyApp/ServiceX false

set RestoreReplicaLocationAfterUpgrade true

upgradeapp fabric:/MyApp V2 Rolling upgrademode=manual

verifyupgradeapp fabric:/MyApp upgradedomains=10_ud

!waitforstate FM.Replica.IsUp.fabric:/MyApp/ServiceX.10 true
!waitforstate FM.Replica.Role.fabric:/MyApp/ServiceX.10 Primary
!waitforstate FM.FT.Reconfig.fabric:/MyApp/ServiceX false

set RestoreReplicaLocationAfterUpgrade false

rollbackapp fabric:/MyApp
updateappupgrade fabric:/MyApp upgrademode=auto
setrollbackapp fabric:/MyApp V1 failurereason=Interrupted

verifyupgradeapp fabric:/MyApp

!waitforstate FM.Replica.Role.fabric:/MyApp/ServiceX.30 Primary

verify

################################################################################
# TestCase 3: Notification-Only application upgrade rollback when primary is
#             not upgraded
################################################################################

set RestoreReplicaLocationAfterUpgrade false

upgradeapp fabric:/MyApp V3 Rolling upgrademode=manual

verifyupgradeapp fabric:/MyApp upgradedomains=10_ud

rollbackapp fabric:/MyApp
updateappupgrade fabric:/MyApp upgrademode=auto
setrollbackapp fabric:/MyApp V1 failurereason=Interrupted

verifyupgradeapp fabric:/MyApp

!waitforstate FM.Replica.Role.fabric:/MyApp/ServiceX.30 Primary

verify

################################################################################
# TestCase 4: Notification-Only application upgrade rollback when primary has
#             been upgraded
################################################################################

swapprimary fabric:/MyApp/ServiceX 30 10
!waitforstate FM.Replica.Role.fabric:/MyApp/ServiceX.10 Primary
!waitforstate FM.FT.Reconfig.fabric:/MyApp/ServiceX false

set RestoreReplicaLocationAfterUpgrade true

upgradeapp fabric:/MyApp V3 Rolling upgrademode=manual

verifyupgradeapp fabric:/MyApp upgradedomains=10_ud

set RestoreReplicaLocationAfterUpgrade false

rollbackapp fabric:/MyApp
updateappupgrade fabric:/MyApp upgrademode=auto
setrollbackapp fabric:/MyApp V1 failurereason=Interrupted

verifyupgradeapp fabric:/MyApp

!waitforstate FM.Replica.Role.fabric:/MyApp/ServiceX.10 Primary

verify

################################################################################
# TestCase 5: Application upgrade rollback should be treated as normal app upgrade
#             and complete UD by UD if previous upgrade completed on FM side
################################################################################

upgradeapp fabric:/MyApp V3 Rolling upgrademode=manual

verifyupgradeapp fabric:/MyApp upgradedomains=10_ud

upgradeappmovenext fabric:/MyApp

verifyupgradeapp fabric:/MyApp upgradedomains=10_ud,20_ud

upgradeappmovenext fabric:/MyApp

updateappupgrade fabric:/MyApp upgrademode=monitored failaction=rollback healthcheckretry=10 healthcheckstable=60

addbehavior b1 * * UpgradeReply

!waitforstate FM.App.IsUpgradeCompleted.TestApp_0 true

reporthealth application appname=fabric:/MyApp healthstate=error
queryhealth application appname=fabric:/MyApp expectedhealthstate=error

setrollbackapp fabric:/MyApp V1 failurereason=HealthCheck

removebehavior b1

verifyupgradeapp fabric:/MyApp

verify

-*

!q