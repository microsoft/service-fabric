votes 10 20 30
cleantest

fmservice 1 1
cmservice 1 1
namingservice 1 1 1

set NamingOperationTimeout 15
set NamingOperationRetryTimeout 60

+10
+20
+30
verify

#
# Test failures when service is created: auto scaling by AddRemovePartition
#
# lower load threahold greater than upper load threshold
createservice fabric:/cantcreate TestPersistedStoreServiceType y 3 1 persist partitionnames=0,1,2 metrics=CPU,High,10,10 scalingPolicy=type:partition,metricname:CPU,minCount:2,maxCount:4,metriclow:500,metrichigh:40,scaleincrement:2,scaleinterval:1 errors=InvalidServiceScalingPolicy
# lower load threahold is negative
createservice fabric:/cantcreate TestPersistedStoreServiceType y 3 1 persist partitionnames=0,1,2 metrics=CPU,High,10,10 scalingPolicy=type:partition,metricname:CPU,minCount:2,maxCount:4,metriclow:-1,metrichigh:40,scaleincrement:2,scaleinterval:1 errors=InvalidServiceScalingPolicy
#upper load threshold is negative
createservice fabric:/cantcreate TestPersistedStoreServiceType y 3 1 persist partitionnames=0,1,2 metrics=CPU,High,10,10 scalingPolicy=type:partition,metricname:CPU,minCount:2,maxCount:4,metriclow:500,metrichigh:-1,scaleincrement:2,scaleinterval:1 errors=InvalidServiceScalingPolicy
# upper load threshold is zero
createservice fabric:/cantcreate TestPersistedStoreServiceType y 3 1 persist partitionnames=0,1,2 metrics=CPU,High,10,10 scalingPolicy=type:partition,metricname:CPU,minCount:2,maxCount:4,metriclow:0,metrichigh:0,scaleincrement:2,scaleinterval:1 errors=InvalidServiceScalingPolicy
# minimum partition count is greater than maximum partition count
createservice fabric:/cantcreate TestPersistedStoreServiceType y 3 1 persist partitionnames=0,1,2 metrics=CPU,High,10,10 scalingPolicy=type:partition,metricname:CPU,minCount:20,maxCount:4,metriclow:5,metrichigh:40,scaleincrement:2,scaleinterval:1 errors=InvalidServiceScalingPolicy
# minimum partition count is negative
createservice fabric:/cantcreate TestPersistedStoreServiceType y 3 1 persist partitionnames=0,1,2 metrics=CPU,High,10,10 scalingPolicy=type:partition,metricname:CPU,minCount:-3,maxCount:4,metriclow:5,metrichigh:40,scaleincrement:2,scaleinterval:1 errors=InvalidServiceScalingPolicy
# minimum partition count is zero
createservice fabric:/cantcreate TestPersistedStoreServiceType y 3 1 persist partitionnames=0,1,2 metrics=CPU,High,10,10 scalingPolicy=type:partition,metricname:CPU,minCount:0,maxCount:4,metriclow:5,metrichigh:40,scaleincrement:2,scaleinterval:1 errors=InvalidServiceScalingPolicy
# maximum partition count is negative
createservice fabric:/cantcreate TestPersistedStoreServiceType y 3 1 persist partitionnames=0,1,2 metrics=CPU,High,10,10 scalingPolicy=type:partition,metricname:CPU,minCount:1,maxCount:-4,metriclow:5,metrichigh:40,scaleincrement:2,scaleinterval:1 errors=InvalidServiceScalingPolicy
# maximum partition count is zero
createservice fabric:/cantcreate TestPersistedStoreServiceType y 3 1 persist partitionnames=0,1,2 metrics=CPU,High,10,10 scalingPolicy=type:partition,metricname:CPU,minCount:1,maxCount:0,metriclow:5,metrichigh:40,scaleincrement:2,scaleinterval:1 errors=InvalidServiceScalingPolicy
# scale increment is negative
createservice fabric:/cantcreate TestPersistedStoreServiceType y 3 1 persist partitionnames=0,1,2 metrics=CPU,High,10,10 scalingPolicy=type:partition,metricname:CPU,minCount:2,maxCount:4,metriclow:5,metrichigh:40,scaleincrement:-1,scaleinterval:1 errors=InvalidServiceScalingPolicy

# Invalid partition names
createservice fabric:/cantcreate TestPersistedStoreServiceType y 3 1 persist partitionnames=1,2,3 metrics=CPU,High,10,10 scalingPolicy=type:partition,metricname:CPU,minCount:2,maxCount:4,metriclow:5,metrichigh:40,scaleincrement:1,scaleinterval:1 errors=InvalidServiceScalingPolicy
createservice fabric:/cantcreate TestPersistedStoreServiceType y 3 1 persist partitionnames=0,1,3 metrics=CPU,High,10,10 scalingPolicy=type:partition,metricname:CPU,minCount:2,maxCount:4,metriclow:5,metrichigh:40,scaleincrement:1,scaleinterval:1 errors=InvalidServiceScalingPolicy
createservice fabric:/cantcreate TestPersistedStoreServiceType y 3 1 persist partitionnames=0,1,partition3 metrics=CPU,High,10,10 scalingPolicy=type:partition,metricname:CPU,minCount:2,maxCount:4,metriclow:5,metrichigh:40,scaleincrement:1,scaleinterval:1 errors=InvalidServiceScalingPolicy

# Metric is not present in the metrics list
createservice fabric:/cantcreate TestPersistedStoreServiceType y 3 1 persist partitionnames=0,1,2 metrics=Memory,High,10,10 scalingPolicy=type:partition,metricname:CPU,minCount:2,maxCount:4,metriclow:5,metrichigh:40,scaleincrement:1,scaleinterval:1 errors=InvalidServiceScalingPolicy


#
# Test failures when service is created: auto scaling of stateless services by InstanceCount
#
# lower load threahold greater than upper load threshold
createservice fabric:/cantcreate CalculatorServiceType n 1 3 metrics=CPU,High,10,0 scalingPolicy=type:instance,metricname:CPU,minCount:2,maxCount:4,metriclow:500,metrichigh:40,scaleincrement:2,scaleinterval:1 errors=InvalidServiceScalingPolicy
# lower load threahold is negative
createservice fabric:/cantcreate CalculatorServiceType n 1 3 metrics=CPU,High,10,0 scalingPolicy=type:partition,metricname:CPU,minCount:2,maxCount:4,metriclow:-1,metrichigh:40,scaleincrement:2,scaleinterval:1 errors=InvalidServiceScalingPolicy
#upper load threshold is negative
createservice fabric:/cantcreate CalculatorServiceType n 1 3 metrics=CPU,High,10,0 scalingPolicy=type:partition,metricname:CPU,minCount:2,maxCount:4,metriclow:500,metrichigh:-1,scaleincrement:2,scaleinterval:1 errors=InvalidServiceScalingPolicy
# upper load threshold is zero
createservice fabric:/cantcreate CalculatorServiceType n 1 3 metrics=CPU,High,10,0 scalingPolicy=type:partition,metricname:CPU,minCount:2,maxCount:4,metriclow:0,metrichigh:0,scaleincrement:2,scaleinterval:1 errors=InvalidServiceScalingPolicy
# minimum instance count is greater than maximum instance count
createservice fabric:/cantcreate CalculatorServiceType n 1 3 metrics=CPU,High,10,0 scalingPolicy=type:instance,metricname:CPU,minCount:20,maxCount:4,metriclow:5,metrichigh:40,scaleincrement:2,scaleinterval:1 errors=InvalidServiceScalingPolicy
# minimum instance count is negative
createservice fabric:/cantcreate CalculatorServiceType n 1 3 metrics=CPU,High,10,0 scalingPolicy=type:instance,metricname:CPU,minCount:-3,maxCount:4,metriclow:5,metrichigh:40,scaleincrement:2,scaleinterval:1 errors=InvalidServiceScalingPolicy
# minimum instance count is zero
createservice fabric:/cantcreate CalculatorServiceType n 1 3 metrics=CPU,High,10,0 scalingPolicy=type:instance,metricname:CPU,minCount:0,maxCount:4,metriclow:5,metrichigh:40,scaleincrement:2,scaleinterval:1 errors=InvalidServiceScalingPolicy
# maximum instance count is negative
createservice fabric:/cantcreate CalculatorServiceType n 1 3 metrics=CPU,High,10,0 scalingPolicy=type:instance,metricname:CPU,minCount:1,maxCount:-4,metriclow:5,metrichigh:40,scaleincrement:2,scaleinterval:1 errors=InvalidServiceScalingPolicy
# maximum instance count is zero
createservice fabric:/cantcreate CalculatorServiceType n 1 3 metrics=CPU,High,10,0 scalingPolicy=type:instance,metricname:CPU,minCount:1,maxCount:0,metriclow:5,metrichigh:40,scaleincrement:2,scaleinterval:1 errors=InvalidServiceScalingPolicy
# scale increment is negative
createservice fabric:/cantcreate CalculatorServiceType n 1 3 metrics=CPU,High,10,0 scalingPolicy=type:instance,metricname:CPU,minCount:2,maxCount:4,metriclow:5,metrichigh:40,scaleincrement:-1,scaleinterval:1 errors=InvalidServiceScalingPolicy

# PartitionInstanceCountScalingMechanism cannot be used with stateful services
createservice fabric:/cantcreate TestPersistedStoreServiceType y 3 1 persist partitionnames=0,1,2 scalingPolicy=type:instance,metricname:CPU,minCount:2,maxCount:2,metriclow:5,metrichigh:5,scaleincrement:2,scaleinterval:1 errors=InvalidServiceScalingPolicy

# UseOnlyPrimaryLoadFlag cannot be used with stateless services
createservice fabric:/cantcreate CalculatorServiceType n 3 1 metrics=CPU,High,10,0 persist partitionnames=0,1,2 scalingPolicy=type:partition,metricname:CPU,minCount:2,maxCount:2,metriclow:5,metrichigh:5,scaleincrement:2,scaleinterval:1,useonlyprimaryload:true errors=InvalidServiceScalingPolicy

# Metric is not present in the metrics list
createservice fabric:/cantcreate CalculatorServiceType n 1 3 metrics=Memory,High,10,0 scalingPolicy=type:instance,metricname:CPU,minCount:2,maxCount:4,metriclow:5,metrichigh:40,scaleincrement:1,scaleinterval:1 errors=InvalidServiceScalingPolicy

#
# Edge case testing (equal values for lower and upper bounds).
#
createservice fabric:/stateful TestPersistedStoreServiceType y 3 1 persist partitionnames=0,1,2 metrics=CPU,High,5,5 scalingPolicy=type:partition,metricname:CPU,minCount:3,maxCount:3,metriclow:5,metrichigh:5,scaleincrement:2,scaleinterval:1
createservice fabric:/stateless CalculatorServiceType n 1 3 metrics=CPU,High,5,0 scalingPolicy=type:instance,metricname:CPU,minCount:3,maxCount:3,metriclow:5,metrichigh:5,scaleincrement:2,scaleinterval:1
verify

#
# Service updates
#

# lower load threahold greater than upper load threshold
updateservice fabric:/stateful Stateful scalingPolicy=type:partition,metricname:CPU,minCount:2,maxCount:4,metriclow:500,metrichigh:40,scaleincrement:2,scaleinterval:1 error=InvalidServiceScalingPolicy
# minimum partition count is greater than maximum partition count
updateservice fabric:/stateful Stateful scalingPolicy=type:partition,metricname:CPU,minCount:20,maxCount:4,metriclow:5,metrichigh:40,scaleincrement:2,scaleinterval:1 error=InvalidServiceScalingPolicy
# minimum partition count is zero
updateservice fabric:/stateful Stateful scalingPolicy=type:partition,metricname:CPU,minCount:0,maxCount:4,metriclow:5,metrichigh:40,scaleincrement:2,scaleinterval:1 error=InvalidServiceScalingPolicy
# scale increment is negative
updateservice fabric:/stateful Stateful scalingPolicy=type:partition,metricname:CPU,minCount:2,maxCount:4,metriclow:5,metrichigh:40,scaleincrement:-1,scaleinterval:1 error=InvalidServiceScalingPolicy

# Metric is not present in the metrics list
updateservice fabric:/stateful Stateful scalingPolicy=type:partition,metricname:Memory,minCount:2,maxCount:4,metriclow:5,metrichigh:40,scaleincrement:1,scaleinterval:1 error=InvalidServiceScalingPolicy

# PartitionInstanceCountScalingMechanism cannot be used with stateful services
updateservice fabric:/stateful Stateful scalingPolicy=type:instance,metricname:CPU,minCount:2,maxCount:2,metriclow:5,metrichigh:5,scaleincrement:2,scaleinterval:1 error=InvalidServiceScalingPolicy

# lower load threahold greater than upper load threshold
updateservice fabric:/stateless Stateless scalingPolicy=type:instance,metricname:CPU,minCount:2,maxCount:4,metriclow:500,metrichigh:40,scaleincrement:2,scaleinterval:1 error=InvalidServiceScalingPolicy
# minimum instance count is greater than maximum instance count
updateservice fabric:/stateless Stateless scalingPolicy=type:instance,metricname:CPU,minCount:20,maxCount:4,metriclow:5,metrichigh:40,scaleincrement:2,scaleinterval:1 error=InvalidServiceScalingPolicy
# minimum instance count is zero
updateservice fabric:/stateless Stateless scalingPolicy=type:instance,metricname:CPU,minCount:0,maxCount:4,metriclow:5,metrichigh:40,scaleincrement:2,scaleinterval:1 error=InvalidServiceScalingPolicy
# scale increment is negative
updateservice fabric:/stateless Stateless scalingPolicy=type:instance,metricname:CPU,minCount:2,maxCount:4,metriclow:5,metrichigh:40,scaleincrement:-1,scaleinterval:1 error=InvalidServiceScalingPolicy

# Metric is not present in the metrics list
updateservice fabric:/stateless Stateless scalingPolicy=type:instance,metricname:Memory,minCount:2,maxCount:4,metriclow:5,metrichigh:40,scaleincrement:1,scaleinterval:1 error=InvalidServiceScalingPolicy

getservicedescription fabric:/stateful verify partitionnames=0,1,2
!waitforstate FM.Replica.State.fabric:/stateless.10 Ready
!waitforstate FM.Replica.State.fabric:/stateless.20 Ready
!waitforstate FM.Replica.State.fabric:/stateless.30 Ready

#
# Force update should be possible (it happens on FM failover)
#
plbupdateservice fabric:/stateful scalingPolicy=type:partition,metricname:CPU,minCount:0,maxCount:5,metriclow:30,metrichigh:40,scaleincrement:4,scaleinterval:1 force=true
plbupdateservice fabric:/stateless scalingPolicy=type:instance,metricname:CPU,minCount:0,maxCount:5,metriclow:30,metrichigh:40,scaleincrement:2,scaleinterval:1 force=true
verify

!pause 20

#Naming will constantly fail with veryfying partitioned service with 0 partitions so autoscaling won't happen at all
getservicedescription fabric:/stateful verify partitionnames=0,1,2
#All replicas of stateless service will be marked for drop
!waitforstate FM.Replica.State.fabric:/stateless.10 Dropped
!waitforstate FM.Replica.State.fabric:/stateless.20 Dropped
!waitforstate FM.Replica.State.fabric:/stateless.30 Dropped

plbupdateservice fabric:/stateful scalingPolicy=type:partition,metricname:CPU,minCount:0,maxCount:5,metriclow:30,metrichigh:40,scaleincrement:2,scaleinterval:1 force=true

!pause 20

#Naming will fail with veryfying partitioned service with 0 partitions, so only 1 autoscale action should happen removing 2 partitions
getservicedescription fabric:/stateful verify partitionnames=0

!q
