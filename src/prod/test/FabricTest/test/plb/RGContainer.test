###############################################################################################################################
# Test: RGContainer.test
# Owners: miradic, nipuzovi, anuragg

#IMPORTANT - when this test is run on Linux cgorup hierarchy is created on a single machine regardless on the number of nodes
#Therefore we should only create singleton services

#By creating a SP with 2 or more containers we automatically get a container group on Linux
#If you want to test pods (container groups) just add 2+ containers in your SP
################################################################################################################################

votes 10 20 30
namingservice 1 3 1
cmservice 3 1
fmservice 3 1
cleantest

set NamingOperationTimeout 120

# We need to be able to move replicas while in upgrade
set AllowConstraintCheckFixesDuringApplicationUpgrade true

# Disable load balancing to have predictability during test run
set LoadBalancingEnabled false

# Do not allow movement during upgrade for replicas which services have target replica count = 1
set IsSingletonReplicaMoveAllowedDuringUpgrade false

# Time slot while hosting holds opened service package after replica was dropped
set DeactivationGraceInterval 0
set DeactivationFailedRetryIntervalRange to 0

#No LRM test mode
set LocalResourceManagerTestMode false

set DummyPLBEnabled true

# Avoid automatic cleanup of unused application types
!setcfg Management.CleanupUnusedApplicationTypes=false

#All the machines we run tests on should have at least this much for them
+10 ud=UD1 cap=servicefabric:/_CpuCores:1,servicefabric:/_MemoryInMB:250
+20 ud=UD2 cap=servicefabric:/_CpuCores:1,servicefabric:/_MemoryInMB:250
+30 ud=UD3 cap=servicefabric:/_CpuCores:1,servicefabric:/_MemoryInMB:250
verify

#if containers are not supported finish the test...
checkcontainers

# 
# Application type version 1.0
#
app.add version10 TestAppType 1.0
app.clear version10
app.servicepack version10 ServicePackageA version=1.0 resources=CPU,0.8
app.servicetypes version10 ServicePackageA ServiceTypeA1 stateless implicit
app.codepack version10 ServicePackageA CodeA1 types=ServiceTypeA1 version=1.0 rgpolicies=MemoryInMB;120 entrytype=ContainerHost
app.upload version10 compress
provisionapp version10

# 
# Application type version 1.1 
#
app.add version11 TestAppType 1.1 version10
app.clear version11
app.servicepack version11 ServicePackageA resources=CPU,0.5
app.servicetypes version11 ServicePackageA ServiceTypeA1 stateless implicit
app.codepack version11 ServicePackageA CodeA1 types=ServiceTypeA1 version=1.0 rgpolicies=MemoryInMB;120 entrytype=ContainerHost
app.upload version11 compress
provisionapp version11

# 
# Application type version 1.2
#
app.add version12 TestAppType 1.2 version11
app.clear version12
app.servicepack version12 ServicePackageA resources=CPU,0.4,MemoryInMB,250
app.servicetypes version12 ServicePackageA ServiceTypeA1 stateless implicit
app.servicetypes version12 ServicePackageA ServiceTypeA2 stateless implicit
app.codepack version12 ServicePackageA CodeA1 types=ServiceTypeA1 version=1.0 rgpolicies=MemoryInMB;100;CpuShares;150 entrytype=ContainerHost
app.codepack version12 ServicePackageA CodeA2 types=ServiceTypeA2 version=1.0 rgpolicies=MemoryInMB;100;CpuShares;50 entrytype=ContainerHost
app.upload version12 compress
provisionapp version12

# 
# Application type version 1.3
#
app.add version13 TestAppType 1.3 version12
app.clear version13
app.servicepack version13 ServicePackageA resources=CPU,0.4,MemoryInMB,250
app.servicetypes version13 ServicePackageA ServiceTypeA1 stateless implicit
app.servicetypes version13 ServicePackageA ServiceTypeA2 stateless implicit
app.codepack version13 ServicePackageA CodeA1 types=ServiceTypeA1 version=1.0 entrytype=ContainerHost
app.codepack version13 ServicePackageA CodeA2 types=ServiceTypeA2 version=1.0 entrytype=ContainerHost
app.codepack version13 ServicePackageA CodeA3 types=ServiceTypeA3 version=1.0 entrytype=ContainerHost
app.codepack version13 ServicePackageA CodeA4 types=ServiceTypeA4 version=1.0 entrytype=ContainerHost
app.upload version13 compress
provisionapp version13

# 
# Application type version 1.4
#
app.add version14 TestAppType 1.4 version13
app.clear version14
app.servicepack version14 ServicePackageA resources=CPU,0.3
app.servicetypes version14 ServicePackageA ServiceTypeA1 stateless implicit
app.servicetypes version14 ServicePackageA ServiceTypeA2 stateless implicit
app.codepack version14 ServicePackageA CodeA1 types=ServiceTypeA1 version=1.0 entrytype=ContainerHost
app.codepack version14 ServicePackageA CodeA2 types=ServiceTypeA2 version=1.0 entrytype=ContainerHost
app.codepack version14 ServicePackageA CodeA3 types=ServiceTypeA3 version=1.0 entrytype=ContainerHost
app.upload version14 compress
provisionapp version14

createapp fabric:/app1 TestAppType 1.0
createapp fabric:/app2 TestAppType 1.4
verify

createservice fabric:/app1/serviceA1 ServiceTypeA1 n 1 1 appname=fabric:/app1

#Pause for 15 minutes because downloading container images take time
!pause 900

!waitforstate FM.Replica.State.fabric:/app1/serviceA1.30 Ready

verifynodeload nodeid:30 servicefabric:/_CpuCores 1 0.8
verifynodeload nodeid:30 servicefabric:/_MemoryInMB 120

verifyresourceonnode 30 servicefabric:/_CpuCores 0.8
verifyresourceonnode 30 servicefabric:/_MemoryInMB 120

verifylimits cpcpu=0.8 cpmemory=125829120
#no PODS as only single container SPs
verifypods

upgradeapp fabric:/app1 1.1 Rolling
verifyupgradeapp fabric:/app1 timeout=500

!pause 20

verifynodeload nodeid:30 servicefabric:/_CpuCores 1 0.5
verifynodeload nodeid:30 servicefabric:/_MemoryInMB 120

verifyresourceonnode 30 servicefabric:/_CpuCores 0.5
verifyresourceonnode 30 servicefabric:/_MemoryInMB 120

verifylimits cpcpu=0.5 cpmemory=125829120
#no PODS as only single container SPs
verifypods

upgradeapp fabric:/app1 1.2 Rolling
verifyupgradeapp fabric:/app1 timeout=500

!pause 20

verifynodeload nodeid:30 servicefabric:/_CpuCores 1 0.4
verifynodeload nodeid:30 servicefabric:/_MemoryInMB 250

verifyresourceonnode 30 servicefabric:/_CpuCores 0.4
verifyresourceonnode 30 servicefabric:/_MemoryInMB 250

verifylimits cpcpu=0.3,0.1 cpmemory=104857600,104857600

verifypods 2

upgradeapp fabric:/app1 1.3 Rolling
verifyupgradeapp fabric:/app1 timeout=500

!pause 20

verifynodeload nodeid:30 servicefabric:/_CpuCores 1 0.4
verifynodeload nodeid:30 servicefabric:/_MemoryInMB 250

verifyresourceonnode 30 servicefabric:/_CpuCores 0.4
verifyresourceonnode 30 servicefabric:/_MemoryInMB 250

#on windows we split shares, on linux no
verifylimits cpcpu=0.1w,0.1w,0.1w,0.1w

verifypods 4

createservice fabric:/app2/serviceA2 ServiceTypeA2 n 1 1 appname=fabric:/app2

!waitforstate FM.Replica.State.fabric:/app2/serviceA2.30 Ready

verifynodeload nodeid:30 servicefabric:/_CpuCores 1 0.7
verifynodeload nodeid:30 servicefabric:/_MemoryInMB 250

verifyresourceonnode 30 servicefabric:/_CpuCores 0.7
verifyresourceonnode 30 servicefabric:/_MemoryInMB 250

verifylimits cpcpu=0.1w,0.1w,0.1w,0.1w,0.1w,0.1w,0.1w

verifypods 4 3

deleteservice fabric:/app1/serviceA1

!pause 10

verifynodeload nodeid:30 servicefabric:/_CpuCores 1 0.3

verifyresourceonnode 30 servicefabric:/_CpuCores 0.3

verifylimits cpcpu=0.1w,0.1w,0.1w

verifypods 3

deleteservice fabric:/app2/serviceA2

!pause 10

verifyresourceonnode 30 servicefabric:/_CpuCores 0
verifyresourceonnode 30 servicefabric:/_MemoryInMB 0

verifypods

deleteapp fabric:/app1
deleteapp fabric:/app2
!q
