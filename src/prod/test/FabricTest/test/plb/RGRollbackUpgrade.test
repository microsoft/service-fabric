###############################################################################
# Test: RGRollbackUpgrade.Test
# Owners: nipuzovi, yangli, anuragg
# This test verifies rollback upgrade scenario for RG
###############################################################################
votes 10 20
namingservice 1 3 1
cmservice 3 1
fmservice 3 1
cleantest

set NamingOperationTimeout 120
#use fast balancing
set PLBActionRetryTimes 30
#we need to be able to move replicas while in upgrade
set AllowConstraintCheckFixesDuringApplicationUpgrade true
# Do not check for available resources and do not enforce RG on the nodes
# This is to be able to execute the test on any machine, regardless 
set LocalResourceManagerTestMode true
set ExpectedReplicaUpgradeDuration 5

# Avoid automatic cleanup of unused application types
!setcfg Management.CleanupUnusedApplicationTypes=false

+10 ud=UD1 fd=fd:/FD1 cap=servicefabric:/_CpuCores:10,servicefabric:/_MemoryInMB:15000
+20 ud=UD2 fd=fd:/FD1 cap=servicefabric:/_CpuCores:10,servicefabric:/_MemoryInMB:15000
+30 ud=UD3 fd=fd:/FD2 cap=servicefabric:/_CpuCores:10,servicefabric:/_MemoryInMB:15000
+40 ud=UD4 fd=fd:/FD2 cap=servicefabric:/_CpuCores:10,servicefabric:/_MemoryInMB:1500
verify

# 
# Application type version 1.0
#
app.add version10 TestApp 1.0
app.clear version10

app.servicepack version10 ServicePackageA version=1.0

app.servicetypes version10 ServicePackageA ServiceTypeA1 stateful persist
app.servicetypes version10 ServicePackageA ServiceTypeB1 stateless

app.codepack version10 ServicePackageA CodeA1 types=ServiceTypeA1 version=1.0
app.codepack version10 ServicePackageA CodeB1 types=ServiceTypeB1 version=1.0

app.upload version10 compress

# 
# Application type version 1.1 
#

app.add version11 TestApp 1.1 version10
app.clear version11

app.servicepack version11 ServicePackageA version=1.1 configversion=1.1 dataversion=1.0 resources=MemoryInMB,3000

app.servicetypes version11 ServicePackageA ServiceTypeA1 stateful persist
app.servicetypes version11 ServicePackageA ServiceTypeB1 stateless

app.codepack version11 ServicePackageA CodeA1 types=ServiceTypeA1 version=1.0
app.codepack version11 ServicePackageA CodeB1 types=ServiceTypeB1 version=1.0

app.upload version11 compress

# 
# Application type version 1.2
#

app.add version12 TestApp 1.2 version11
app.clear version12

app.servicepack version12 ServicePackageA version=1.2 configversion=1.2 dataversion=1.0 resources=CPU,1,MemoryInMB,2000

app.servicetypes version12 ServicePackageA ServiceTypeA1 stateful persist
app.servicetypes version12 ServicePackageA ServiceTypeB1 stateless

app.codepack version12 ServicePackageA CodeA1 types=ServiceTypeA1 version=1.0
app.codepack version12 ServicePackageA CodeB1 types=ServiceTypeB1 version=1.0

app.upload version12 compress

#
# Provision application version 1.0
#
provisionapp version10

#
# Provision application version 1.1
#
provisionapp version11

#
# Provision application version 1.2
#
provisionapp version12

createapp fabric:/app1 TestApp 1.0
verify

createservice fabric:/app1/smallservice1 ServiceTypeA1 y 2 2 persist appname=fabric:/app1 servicePackageActivationMode=ExclusiveProcess  standbyreplicakeepduration=5
createservice fabric:/app1/smallservice2 ServiceTypeB1 n 2 3 appname=fabric:/app1 servicePackageActivationMode=SharedProcess  standbyreplicakeepduration=5
verify

upgradeapp fabric:/app1 1.1 Rolling
verifyupgradeapp fabric:/app1
verify

!pause 20

verifyclusterload servicefabric:/_CpuCores 0 0 0 -1
verifyclusterload servicefabric:/_MemoryInMB 21000 9000 0 -1

upgradeapp fabric:/app1 1.2 Rolling upgrademode=manual

verifyupgradeapp fabric:/app1 upgradedomains=UD1

upgradeappmovenext fabric:/app1

verifyupgradeapp fabric:/app1 upgradedomains=UD1,UD2

rollbackapp fabric:/app1
updateappupgrade fabric:/app1 upgrademode=auto
setrollbackapp fabric:/app1 1.1 failurereason=Interrupted

verifyupgradeapp fabric:/app1

!pause 20

verifyclusterload servicefabric:/_CpuCores 0 0 0 -1
verifyclusterload servicefabric:/_MemoryInMB 21000 9000 0 -1

!q
