#################################################################
# SecureStore: test script of basic workflow of plaintext secrets.
# Summary of Test:
#    1. Create a Cluster.
#    2. Add versioned secrets.
#	 3. List secrets
#    4. For each secret, list versions
#    5. For each version, retrieve and verify value
#    6. attempt to retrieve unknown secret version
#    7. Remove secret.
#    8. Attempt to retrieve removed secret
#    9. Clear secure store.
#################################################################

# 0. Create local 5 node cluster.
set EnableUnsupportedPreviewFeatures true # todo find out why we cant set via !setcfg

# CSS won't work without a cluster certificate; need to find out how to enable this in a test script
votes 10
cmservice 0 0
namingservice 5 1 1
centralsecretservice 1 1 1
cleantest
#!setcfg CentralSecretService.IsEnabled=true
+10
+20
+30
+40
+50
#verify - todo: figure out why css is not found in the service map

# 1. Create 2 secret resources
createsecret name=alice_pwd kind="inlinedvalue" contenttype="text/plain" description="alices password"
createsecret name=bob_pwd kind="inlinedvalue"

# 2. Add versioned secrets.
# the convention of this test is that the value of each of the secret's version is <name>-<version>
addversionedplaintextsecretvalue name=alice_pwd version=v_1 value="alice_pwd-v_1"
addversionedplaintextsecretvalue name=alice_pwd version=v_2 value="alice_pwd-v_2"
addversionedplaintextsecretvalue name=bob_pwd version=v5 value="bob_pwd-v5"
addversionedplaintextsecretvalue name=bob_pwd version=v10 value="bob_pwd-v10"
addversionedplaintextsecretvalue name=bob_pwd version=v15 value="bob_pwd-v15"

# 3. List secrets
listsecrets expectedValues={alice_pwd, bob_pwd}

# 4. For each secret, list versions
listsecretversions name=alice_pwd expectedValues={v_1, v_2}
listsecretversions name=bob_pwd expectedValues={v5, v10, v10}

# 5. For each version, retrieve and verify value
getsecretvalue name=alice_pwd version=v_1 expectedValue="alice_pwd-v_1"
getsecretvalue name=alice_pwd version=v_2 expectedValue="alice_pwd-v_2"
getsecretvalue name=bob_pwd version=v5 expectedValue="bob_pwd-v5"
getsecretvalue name=bob_pwd version=v10 expectedValue="bob_pwd-v10"
getsecretvalue name=bob_pwd version=v15 expectedValue="bob_pwd-v15"

# 6. attempt to retrieve unknown version
getsecretvalue name=bob_pwd version=v20 expectedFailure=true
addversionedplaintextsecretvalue name=bob_pwd version=v20 value=bob_pwd-v20
getsecretvalue name=bob_pwd version=v20 expectedValue=bob_pwd-v20

# 7. Remove a secret version, verify it can't be retrieved; verify other versions are not affected.
removesecretversion name=alice_pwd version=v_1
getsecretvalue name=alice_pwd version=v_1 expectedFailure=true
getsecretvalue name=alice_pwd version=v_2 expectedValue="alice_pwd-v_2"

# 8. Attempt to retrieve removed secret
removesecret name=bob_pwd
getsecretvalue name=bob_pwd version=v5 expectedFailure=true
getsecretvalue name=bob_pwd version=v10 expectedFailure=true
getsecretvalue name=bob_pwd version=v15 expectedFailure=true
getsecretvalue name=bob_pwd version=v20 expectedFailure=true

# 9. Clear secure store.
removeallsecrets

!quit
